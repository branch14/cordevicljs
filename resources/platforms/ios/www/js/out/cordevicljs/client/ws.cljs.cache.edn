;; Analyzed by ClojureScript 0.0-3291
{:use-macros nil, :excludes #{}, :name cordevicljs.client.ws, :imports nil, :requires {sente taoensso.sente, taoensso.sente taoensso.sente, sente-transit taoensso.sente.packers.transit, taoensso.sente.packers.transit taoensso.sente.packers.transit}, :uses nil, :defs {push-msg-handler {:name cordevicljs.client.ws/push-msg-handler, :file "src/cordevicljs/client/ws.cljs", :line 5, :column 1, :end-line 5, :end-column 27, :meta {:file "/Users/luposlip/enterlab/cordevicljs/src/cordevicljs/client/ws.cljs", :line 5, :column 11, :end-line 5, :end-column 27}}, event-msg-handler {:name cordevicljs.client.ws/event-msg-handler, :file "src/cordevicljs/client/ws.cljs", :line 11, :column 1, :end-line 11, :end-column 28, :meta {:file "/Users/luposlip/enterlab/cordevicljs/src/cordevicljs/client/ws.cljs", :line 11, :column 11, :end-line 11, :end-column 28}}, event-msg-handler* {:protocol-inline nil, :meta {:file "/Users/luposlip/enterlab/cordevicljs/src/cordevicljs/client/ws.cljs", :line 28, :column 7, :end-line 28, :end-column 25, :arglists (quote ([{:as ev-msg, :keys [id ?data event]}]))}, :name cordevicljs.client.ws/event-msg-handler*, :variadic false, :file "src/cordevicljs/client/ws.cljs", :end-column 25, :method-params ([p__35905]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 28, :end-line 28, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{:as ev-msg, :keys [id ?data event]}]))}, test-socket-callback {:protocol-inline nil, :meta {:file "/Users/luposlip/enterlab/cordevicljs/src/cordevicljs/client/ws.cljs", :line 42, :column 7, :end-line 42, :end-column 27, :arglists (quote ([]))}, :name cordevicljs.client.ws/test-socket-callback, :variadic false, :file "src/cordevicljs/client/ws.cljs", :end-column 27, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 42, :end-line 42, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, test-socket-event {:protocol-inline nil, :meta {:file "/Users/luposlip/enterlab/cordevicljs/src/cordevicljs/client/ws.cljs", :line 48, :column 7, :end-line 48, :end-column 24, :arglists (quote ([]))}, :name cordevicljs.client.ws/test-socket-event, :variadic false, :file "src/cordevicljs/client/ws.cljs", :end-column 24, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 48, :end-line 48, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:first-open? :cordevicljs/testevent :chsk/recv :default :chsk/state :event :id :?data :hierarchy :message}, :order [:hierarchy :default :cordevicljs/testevent :id :event :chsk/state :?data :first-open? :chsk/recv :message]}, :doc nil}