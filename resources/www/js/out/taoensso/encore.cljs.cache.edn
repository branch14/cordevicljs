;; Analyzed by ClojureScript 0.0-3291
{:use-macros {have taoensso.encore, compile-if taoensso.encore, have? taoensso.encore, catch-errors taoensso.encore}, :excludes #{}, :name taoensso.encore, :imports nil, :requires {goog.net.XhrIoPool goog.net.XhrIoPool, gevents goog.events, set clojure.set, goog.net.XhrIo goog.net.XhrIo, gquery-data goog.Uri.QueryData, goog.string goog.string, goog.Uri.QueryData goog.Uri.QueryData, gxhr-pool goog.net.XhrIoPool, goog.string.StringBuffer goog.string.StringBuffer, goog.net.EventType goog.net.EventType, clojure.set clojure.set, goog.structs goog.structs, goog.string.format goog.string.format, gstructs goog.structs, str clojure.string, clojure.string clojure.string, cljs.reader cljs.reader, gstr goog.string, edn cljs.reader, goog.events goog.events, goog.net.ErrorCode goog.net.ErrorCode, gxhr goog.net.XhrIo}, :uses nil, :defs {encore-version {:name taoensso.encore/encore-version, :file "resources/www/js/out/taoensso/encore.cljs", :line 39, :column 1, :end-line 39, :end-column 21, :meta {:file "/Users/luposlip/enterlab/cordevicljs/resources/www/js/out/taoensso/encore.cljs", :line 39, :column 7, :end-line 39, :end-column 21}, :doc "Used for lib-consumer version assertions"}, nneg-int? {:protocol-inline nil, :meta {:file "/Users/luposlip/enterlab/cordevicljs/resources/www/js/out/taoensso/encore.cljs", :line 237, :column 7, :end-line 237, :end-column 16, :arglists (quote ([x]))}, :name taoensso.encore/nneg-int?, :variadic false, :file "resources/www/js/out/taoensso/encore.cljs", :end-column 16, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 237, :end-line 237, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, error? {:protocol-inline nil, :meta {:file "/Users/luposlip/enterlab/cordevicljs/resources/www/js/out/taoensso/encore.cljs", :line 194, :column 13, :end-line 194, :end-column 19, :arglists (quote ([x]))}, :name taoensso.encore/error?, :variadic false, :file "resources/www/js/out/taoensso/encore.cljs", :end-column 19, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 7, :line 194, :end-line 194, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, set* {:protocol-inline nil, :meta {:file "/Users/luposlip/enterlab/cordevicljs/resources/www/js/out/taoensso/encore.cljs", :line 287, :column 7, :end-line 287, :end-column 11, :arglists (quote ([x]))}, :name taoensso.encore/set*, :variadic false, :file "resources/www/js/out/taoensso/encore.cljs", :end-column 11, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 287, :end-line 287, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, sayp {:protocol-inline nil, :meta {:file "/Users/luposlip/enterlab/cordevicljs/resources/www/js/out/taoensso/encore.cljs", :line 1698, :column 9, :end-line 1698, :end-column 13, :arglists (quote ([& xs])), :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(xs)], :arglists ([& xs]), :arglists-meta (nil)}}, :name taoensso.encore/sayp, :variadic true, :file "resources/www/js/out/taoensso/encore.cljs", :end-column 13, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(xs)], :arglists ([& xs]), :arglists-meta (nil)}, :method-params [(xs)], :protocol-impl nil, :arglists-meta (nil), :column 3, :line 1698, :end-line 1698, :max-fixed-arity 0, :fn-var true, :arglists ([& xs])}, now-udt {:protocol-inline nil, :meta {:file "/Users/luposlip/enterlab/cordevicljs/resources/www/js/out/taoensso/encore.cljs", :line 604, :column 7, :end-line 604, :end-column 14, :arglists (quote ([]))}, :name taoensso.encore/now-udt, :variadic false, :file "resources/www/js/out/taoensso/encore.cljs", :end-column 14, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 604, :end-line 604, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, as-?kw {:protocol-inline nil, :meta {:file "/Users/luposlip/enterlab/cordevicljs/resources/www/js/out/taoensso/encore.cljs", :line 251, :column 7, :end-line 251, :end-column 13, :arglists (quote ([x]))}, :name taoensso.encore/as-?kw, :variadic false, :file "resources/www/js/out/taoensso/encore.cljs", :end-column 13, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 251, :end-line 251, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, url-decode {:protocol-inline nil, :meta {:file "/Users/luposlip/enterlab/cordevicljs/resources/www/js/out/taoensso/encore.cljs", :line 1925, :column 7, :end-line 1925, :end-column 17, :arglists (quote ([s & [encoding]])), :doc "Stolen from http://goo.gl/99NSR1.", :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(s [encoding])], :arglists ([s & [encoding]]), :arglists-meta (nil)}}, :name taoensso.encore/url-decode, :variadic true, :file "resources/www/js/out/taoensso/encore.cljs", :end-column 17, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(s [encoding])], :arglists ([s & [encoding]]), :arglists-meta (nil)}, :method-params [(s [encoding])], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 1925, :end-line 1925, :max-fixed-arity 1, :fn-var true, :arglists ([s & [encoding]]), :doc "Stolen from http://goo.gl/99NSR1."}, parse-query-params {:protocol-inline nil, :meta {:file "/Users/luposlip/enterlab/cordevicljs/resources/www/js/out/taoensso/encore.cljs", :line 1951, :column 7, :end-line 1951, :end-column 25, :arglists (quote ([s & [keywordize? encoding]])), :doc "Based on `ring-codec/form-decode`.", :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(s [keywordize? encoding])], :arglists ([s & [keywordize? encoding]]), :arglists-meta (nil)}}, :name taoensso.encore/parse-query-params, :variadic true, :file "resources/www/js/out/taoensso/encore.cljs", :end-column 25, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(s [keywordize? encoding])], :arglists ([s & [keywordize? encoding]]), :arglists-meta (nil)}, :method-params [(s [keywordize? encoding])], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 1951, :end-line 1951, :max-fixed-arity 1, :fn-var true, :arglists ([s & [keywordize? encoding]]), :doc "Based on `ring-codec/form-decode`."}, dissoc-in {:protocol-inline nil, :meta {:file "/Users/luposlip/enterlab/cordevicljs/resources/www/js/out/taoensso/encore.cljs", :line 896, :column 7, :end-line 896, :end-column 16, :arglists (quote ([m ks & dissoc-ks])), :top-fn {:variadic true, :max-fixed-arity 2, :method-params [(m ks dissoc-ks)], :arglists ([m ks & dissoc-ks]), :arglists-meta (nil)}}, :name taoensso.encore/dissoc-in, :variadic true, :file "resources/www/js/out/taoensso/encore.cljs", :end-column 16, :top-fn {:variadic true, :max-fixed-arity 2, :method-params [(m ks dissoc-ks)], :arglists ([m ks & dissoc-ks]), :arglists-meta (nil)}, :method-params [(m ks dissoc-ks)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 896, :end-line 896, :max-fixed-arity 2, :fn-var true, :arglists ([m ks & dissoc-ks])}, norm-word-breaks {:protocol-inline nil, :meta {:file "/Users/luposlip/enterlab/cordevicljs/resources/www/js/out/taoensso/encore.cljs", :line 1260, :column 7, :end-line 1260, :end-column 23, :arglists (quote ([s])), :doc "Converts all word breaks of any form and length (including line breaks of any\n  form, tabs, spaces, etc.) to a single regular space."}, :name taoensso.encore/norm-word-breaks, :variadic false, :file "resources/www/js/out/taoensso/encore.cljs", :end-column 23, :method-params ([s]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1260, :end-line 1260, :max-fixed-arity 1, :fn-var true, :arglists (quote ([s])), :doc "Converts all word breaks of any form and length (including line breaks of any\n  form, tabs, spaces, etc.) to a single regular space."}, rcompare {:protocol-inline nil, :meta {:file "/Users/luposlip/enterlab/cordevicljs/resources/www/js/out/taoensso/encore.cljs", :line 1091, :column 7, :end-line 1091, :end-column 15, :arglists (quote ([x y])), :doc "Reverse comparator."}, :name taoensso.encore/rcompare, :variadic false, :file "resources/www/js/out/taoensso/encore.cljs", :end-column 15, :method-params ([x y]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1091, :end-line 1091, :max-fixed-arity 2, :fn-var true, :arglists (quote ([x y])), :doc "Reverse comparator."}, Swapped {:num-fields 2, :protocols #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}, :name taoensso.encore/Swapped, :file "resources/www/js/out/taoensso/encore.cljs", :end-column 19, :type true, :column 12, :internal-ctor true, :line 753, :record true, :end-line 753, :skip-protocol-flag #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}}, ms {:protocol-inline nil, :meta {:file "/Users/luposlip/enterlab/cordevicljs/resources/www/js/out/taoensso/encore.cljs", :line 618, :column 7, :end-line 618, :end-column 9, :arglists (quote ([& {:as opts, :keys [years months weeks days hours mins secs msecs ms]}])), :doc "Returns number of milliseconds in period defined by given args.", :top-fn {:variadic true, :max-fixed-arity 0, :method-params [({:as opts, :keys [years months weeks days hours mins secs msecs ms]})], :arglists ([& {:as opts, :keys [years months weeks days hours mins secs msecs ms]}]), :arglists-meta (nil)}}, :name taoensso.encore/ms, :variadic true, :file "resources/www/js/out/taoensso/encore.cljs", :end-column 9, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [({:as opts, :keys [years months weeks days hours mins secs msecs ms]})], :arglists ([& {:as opts, :keys [years months weeks days hours mins secs msecs ms]}]), :arglists-meta (nil)}, :method-params [({:as opts, :keys [years months weeks days hours mins secs msecs ms]})], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 618, :end-line 618, :max-fixed-arity 0, :fn-var true, :arglists ([& {:as opts, :keys [years months weeks days hours mins secs msecs ms]}]), :doc "Returns number of milliseconds in period defined by given args."}, str-ends-with? {:protocol-inline nil, :meta {:file "/Users/luposlip/enterlab/cordevicljs/resources/www/js/out/taoensso/encore.cljs", :line 1215, :column 7, :end-line 1215, :end-column 21, :arglists (quote ([s substr]))}, :name taoensso.encore/str-ends-with?, :variadic false, :file "resources/www/js/out/taoensso/encore.cljs", :end-column 21, :method-params ([s substr]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1215, :end-line 1215, :max-fixed-arity 2, :fn-var true, :arglists (quote ([s substr]))}, nested-merge {:name taoensso.encore/nested-merge, :file "resources/www/js/out/taoensso/encore.cljs", :line 1109, :column 1, :end-line 1109, :end-column 18, :meta {:file "/Users/luposlip/enterlab/cordevicljs/resources/www/js/out/taoensso/encore.cljs", :line 1109, :column 6, :end-line 1109, :end-column 18}}, rate-limited {:protocol-inline nil, :meta {:file "/Users/luposlip/enterlab/cordevicljs/resources/www/js/out/taoensso/encore.cljs", :line 1569, :column 7, :end-line 1569, :end-column 19, :arglists (quote ([ncalls-limit window-ms f])), :doc "Wraps fn so that it returns {:result _ :backoff-ms _}."}, :name taoensso.encore/rate-limited, :variadic false, :file "resources/www/js/out/taoensso/encore.cljs", :end-column 19, :method-params ([ncalls-limit window-ms f]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1569, :end-line 1569, :max-fixed-arity 3, :fn-var true, :arglists (quote ([ncalls-limit window-ms f])), :doc "Wraps fn so that it returns {:result _ :backoff-ms _}."}, format-query-string {:protocol-inline nil, :meta {:file "/Users/luposlip/enterlab/cordevicljs/resources/www/js/out/taoensso/encore.cljs", :line 1933, :column 7, :end-line 1933, :end-column 26, :arglists (quote ([m]))}, :name taoensso.encore/format-query-string, :variadic false, :file "resources/www/js/out/taoensso/encore.cljs", :end-column 26, :method-params ([m]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1933, :end-line 1933, :max-fixed-arity 1, :fn-var true, :arglists (quote ([m]))}, log {:protocol-inline nil, :meta {:file "/Users/luposlip/enterlab/cordevicljs/resources/www/js/out/taoensso/encore.cljs", :line 1695, :column 9, :end-line 1695, :end-column 12, :arglists (quote ([& xs])), :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(xs)], :arglists ([& xs]), :arglists-meta (nil)}}, :name taoensso.encore/log, :variadic true, :file "resources/www/js/out/taoensso/encore.cljs", :end-column 12, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(xs)], :arglists ([& xs]), :arglists-meta (nil)}, :method-params [(xs)], :protocol-impl nil, :arglists-meta (nil), :column 3, :line 1695, :end-line 1695, :max-fixed-arity 0, :fn-var true, :arglists ([& xs])}, nano-time {:name taoensso.encore/nano-time, :file "resources/www/js/out/taoensso/encore.cljs", :line 1583, :column 1, :end-line 1583, :end-column 15, :meta {:file "/Users/luposlip/enterlab/cordevicljs/resources/www/js/out/taoensso/encore.cljs", :line 1583, :column 6, :end-line 1583, :end-column 15}}, clamp {:protocol-inline nil, :meta {:file "/Users/luposlip/enterlab/cordevicljs/resources/www/js/out/taoensso/encore.cljs", :line 549, :column 7, :end-line 549, :end-column 12, :arglists (quote ([nmin nmax n]))}, :name taoensso.encore/clamp, :variadic false, :file "resources/www/js/out/taoensso/encore.cljs", :end-column 12, :method-params ([nmin nmax n]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 549, :end-line 549, :max-fixed-arity 3, :fn-var true, :arglists (quote ([nmin nmax n]))}, memoized {:protocol-inline nil, :meta {:file "/Users/luposlip/enterlab/cordevicljs/resources/www/js/out/taoensso/encore.cljs", :line 1345, :column 7, :end-line 1345, :end-column 15, :arglists (quote ([cache f & args])), :doc "Like `(memoize* f)` but takes an explicit cache atom (possibly nil)\n  and immediately applies memoized f to given arguments.", :top-fn {:variadic true, :max-fixed-arity 2, :method-params [(cache f args)], :arglists ([cache f & args]), :arglists-meta (nil)}}, :name taoensso.encore/memoized, :variadic true, :file "resources/www/js/out/taoensso/encore.cljs", :end-column 15, :top-fn {:variadic true, :max-fixed-arity 2, :method-params [(cache f args)], :arglists ([cache f & args]), :arglists-meta (nil)}, :method-params [(cache f args)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 1345, :end-line 1345, :max-fixed-arity 2, :fn-var true, :arglists ([cache f & args]), :doc "Like `(memoize* f)` but takes an explicit cache atom (possibly nil)\n  and immediately applies memoized f to given arguments."}, greatest {:protocol-inline nil, :meta {:file "/Users/luposlip/enterlab/cordevicljs/resources/www/js/out/taoensso/encore.cljs", :line 1124, :column 7, :end-line 1124, :end-column 15, :arglists (quote ([coll & [?comparator]])), :doc "Returns the 'greatest' element in coll in O(n) time.", :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(coll [?comparator])], :arglists ([coll & [?comparator]]), :arglists-meta (nil)}}, :name taoensso.encore/greatest, :variadic true, :file "resources/www/js/out/taoensso/encore.cljs", :end-column 15, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(coll [?comparator])], :arglists ([coll & [?comparator]]), :arglists-meta (nil)}, :method-params [(coll [?comparator])], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 1124, :end-line 1124, :max-fixed-arity 1, :fn-var true, :arglists ([coll & [?comparator]]), :doc "Returns the 'greatest' element in coll in O(n) time."}, console-error {:name taoensso.encore/console-error, :file "resources/www/js/out/taoensso/encore.cljs", :line 1653, :column 3, :end-line 1653, :end-column 21, :meta {:file "/Users/luposlip/enterlab/cordevicljs/resources/www/js/out/taoensso/encore.cljs", :line 1653, :column 8, :end-line 1653, :end-column 21}}, merge-keywords {:protocol-inline nil, :meta {:file "/Users/luposlip/enterlab/cordevicljs/resources/www/js/out/taoensso/encore.cljs", :line 503, :column 7, :end-line 503, :end-column 21, :arglists (quote ([ks & [as-ns?]])), :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(ks [as-ns?])], :arglists ([ks & [as-ns?]]), :arglists-meta (nil)}}, :name taoensso.encore/merge-keywords, :variadic true, :file "resources/www/js/out/taoensso/encore.cljs", :end-column 21, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(ks [as-ns?])], :arglists ([ks & [as-ns?]]), :arglists-meta (nil)}, :method-params [(ks [as-ns?])], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 503, :end-line 503, :max-fixed-arity 1, :fn-var true, :arglists ([ks & [as-ns?]])}, queue* {:protocol-inline nil, :meta {:file "/Users/luposlip/enterlab/cordevicljs/resources/www/js/out/taoensso/encore.cljs", :line 927, :column 7, :end-line 927, :end-column 13, :arglists (quote ([& items])), :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(items)], :arglists ([& items]), :arglists-meta (nil)}}, :name taoensso.encore/queue*, :variadic true, :file "resources/www/js/out/taoensso/encore.cljs", :end-column 13, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(items)], :arglists ([& items]), :arglists-meta (nil)}, :method-params [(items)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 927, :end-line 927, :max-fixed-arity 0, :fn-var true, :arglists ([& items])}, atom? {:protocol-inline nil, :meta {:file "/Users/luposlip/enterlab/cordevicljs/resources/www/js/out/taoensso/encore.cljs", :line 182, :column 7, :end-line 182, :end-column 12, :arglists (quote ([x]))}, :name taoensso.encore/atom?, :variadic false, :file "resources/www/js/out/taoensso/encore.cljs", :end-column 12, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 182, :end-line 182, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, chan? {:protocol-inline nil, :meta {:file "/Users/luposlip/enterlab/cordevicljs/resources/www/js/out/taoensso/encore.cljs", :line 185, :column 9, :end-line 185, :end-column 14, :arglists (quote ([x]))}, :name taoensso.encore/chan?, :variadic false, :file "resources/www/js/out/taoensso/encore.cljs", :end-column 14, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 3, :line 185, :end-line 185, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, keywordize-map {:protocol-inline nil, :meta {:file "/Users/luposlip/enterlab/cordevicljs/resources/www/js/out/taoensso/encore.cljs", :line 980, :column 7, :end-line 980, :end-column 21, :arglists (quote ([m]))}, :name taoensso.encore/keywordize-map, :variadic false, :file "resources/www/js/out/taoensso/encore.cljs", :end-column 21, :method-params ([m]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 980, :end-line 980, :max-fixed-arity 1, :fn-var true, :arglists (quote ([m]))}, subvec* {:protocol-inline nil, :meta {:file "/Users/luposlip/enterlab/cordevicljs/resources/www/js/out/taoensso/encore.cljs", :line 746, :column 7, :end-line 746, :end-column 14, :arglists (quote ([v start-idx & [?max-len]])), :doc "Like `subvec` but uses `sub-indexes`.", :top-fn {:variadic true, :max-fixed-arity 2, :method-params [(v start-idx [?max-len])], :arglists ([v start-idx & [?max-len]]), :arglists-meta (nil)}}, :name taoensso.encore/subvec*, :variadic true, :file "resources/www/js/out/taoensso/encore.cljs", :end-column 14, :top-fn {:variadic true, :max-fixed-arity 2, :method-params [(v start-idx [?max-len])], :arglists ([v start-idx & [?max-len]]), :arglists-meta (nil)}, :method-params [(v start-idx [?max-len])], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 746, :end-line 746, :max-fixed-arity 2, :fn-var true, :arglists ([v start-idx & [?max-len]]), :doc "Like `subvec` but uses `sub-indexes`."}, logf {:protocol-inline nil, :meta {:file "/Users/luposlip/enterlab/cordevicljs/resources/www/js/out/taoensso/encore.cljs", :line 1697, :column 9, :end-line 1697, :end-column 13, :arglists (quote ([fmt & xs])), :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(fmt xs)], :arglists ([fmt & xs]), :arglists-meta (nil)}}, :name taoensso.encore/logf, :variadic true, :file "resources/www/js/out/taoensso/encore.cljs", :end-column 13, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(fmt xs)], :arglists ([fmt & xs]), :arglists-meta (nil)}, :method-params [(fmt xs)], :protocol-impl nil, :arglists-meta (nil), :column 3, :line 1697, :end-line 1697, :max-fixed-arity 1, :fn-var true, :arglists ([fmt & xs])}, reportf {:protocol-inline nil, :meta {:file "/Users/luposlip/enterlab/cordevicljs/resources/www/js/out/taoensso/encore.cljs", :line 1712, :column 11, :end-line 1712, :end-column 18, :arglists (quote ([fmt & xs])), :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(fmt xs)], :arglists ([fmt & xs]), :arglists-meta (nil)}}, :name taoensso.encore/reportf, :variadic true, :file "resources/www/js/out/taoensso/encore.cljs", :end-column 18, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(fmt xs)], :arglists ([fmt & xs]), :arglists-meta (nil)}, :method-params [(fmt xs)], :protocol-impl nil, :arglists-meta (nil), :column 5, :line 1712, :end-line 1712, :max-fixed-arity 1, :fn-var true, :arglists ([fmt & xs])}, as-?name {:protocol-inline nil, :meta {:file "/Users/luposlip/enterlab/cordevicljs/resources/www/js/out/taoensso/encore.cljs", :line 252, :column 7, :end-line 252, :end-column 15, :arglists (quote ([x]))}, :name taoensso.encore/as-?name, :variadic false, :file "resources/www/js/out/taoensso/encore.cljs", :end-column 15, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 252, :end-line 252, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, udt? {:name taoensso.encore/udt?, :file "resources/www/js/out/taoensso/encore.cljs", :line 240, :column 1, :end-line 240, :end-column 10, :meta {:file "/Users/luposlip/enterlab/cordevicljs/resources/www/js/out/taoensso/encore.cljs", :line 240, :column 6, :end-line 240, :end-column 10}}, fatalf {:protocol-inline nil, :meta {:file "/Users/luposlip/enterlab/cordevicljs/resources/www/js/out/taoensso/encore.cljs", :line 1711, :column 11, :end-line 1711, :end-column 17, :arglists (quote ([fmt & xs])), :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(fmt xs)], :arglists ([fmt & xs]), :arglists-meta (nil)}}, :name taoensso.encore/fatalf, :variadic true, :file "resources/www/js/out/taoensso/encore.cljs", :end-column 17, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(fmt xs)], :arglists ([fmt & xs]), :arglists-meta (nil)}, :method-params [(fmt xs)], :protocol-impl nil, :arglists-meta (nil), :column 5, :line 1711, :end-line 1711, :max-fixed-arity 1, :fn-var true, :arglists ([fmt & xs])}, nneg? {:protocol-inline nil, :meta {:file "/Users/luposlip/enterlab/cordevicljs/resources/www/js/out/taoensso/encore.cljs", :line 235, :column 11, :end-line 235, :end-column 16, :arglists (quote ([x]))}, :name taoensso.encore/nneg?, :variadic false, :file "resources/www/js/out/taoensso/encore.cljs", :end-column 16, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 235, :end-line 235, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, gc-now? {:protocol-inline nil, :meta {:file "/Users/luposlip/enterlab/cordevicljs/resources/www/js/out/taoensso/encore.cljs", :line 1332, :column 7, :end-line 1332, :end-column 14, :arglists (quote ([]))}, :name taoensso.encore/gc-now?, :variadic false, :file "resources/www/js/out/taoensso/encore.cljs", :end-column 14, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1332, :end-line 1332, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, ajax-lite {:protocol-inline nil, :meta {:file "/Users/luposlip/enterlab/cordevicljs/resources/www/js/out/taoensso/encore.cljs", :line 1755, :column 7, :end-line 1755, :end-column 16, :arglists (quote ([uri {:keys [method params headers timeout-ms resp-type], :as opts, :or {method :get, timeout-ms 10000, resp-type :auto}} callback])), :doc "Alpha - subject to change.\n  Simple+lightweight Ajax via Google Closure. Returns nil, or the xhr instance.\n  Ref. https://developers.google.com/closure/library/docs/xhrio.\n\n  (ajax-lite \"/my-post-route\"\n    {:method     :post\n     :params     {:username \"Rich Hickey\"\n                  :type     \"Awesome\"}\n     :headers    {\"Foo\" \"Bar\"}\n     :resp-type  :text\n     :timeout-ms 7000}\n    (fn async-callback [resp-map]\n      (let [{:keys [?status ?error ?content ?content-type]} resp-map]\n        ;; ?status - 200, 404, ..., or nil on no response\n        ;; ?error  - e/o #{:xhr-pool-depleted :exception :http-error :abort\n        ;;                 :timeout <http-error-status> nil}\n        (js/alert (str \"Ajax response: \" resp-map)))))"}, :name taoensso.encore/ajax-lite, :variadic false, :file "resources/www/js/out/taoensso/encore.cljs", :end-column 16, :method-params ([uri p__30660 callback]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1755, :end-line 1755, :max-fixed-arity 3, :fn-var true, :arglists (quote ([uri {:keys [method params headers timeout-ms resp-type], :as opts, :or {method :get, timeout-ms 10000, resp-type :auto}} callback])), :doc "Alpha - subject to change.\n  Simple+lightweight Ajax via Google Closure. Returns nil, or the xhr instance.\n  Ref. https://developers.google.com/closure/library/docs/xhrio.\n\n  (ajax-lite \"/my-post-route\"\n    {:method     :post\n     :params     {:username \"Rich Hickey\"\n                  :type     \"Awesome\"}\n     :headers    {\"Foo\" \"Bar\"}\n     :resp-type  :text\n     :timeout-ms 7000}\n    (fn async-callback [resp-map]\n      (let [{:keys [?status ?error ?content ?content-type]} resp-map]\n        ;; ?status - 200, 404, ..., or nil on no response\n        ;; ?error  - e/o #{:xhr-pool-depleted :exception :http-error :abort\n        ;;                 :timeout <http-error-status> nil}\n        (js/alert (str \"Ajax response: \" resp-map)))))"}, distinct-by {:protocol-inline nil, :meta {:file "/Users/luposlip/enterlab/cordevicljs/resources/www/js/out/taoensso/encore.cljs", :line 1078, :column 7, :end-line 1078, :end-column 18, :arglists (quote ([keyfn coll])), :doc "Like `sort-by` for distinct. Based on clojure.core/distinct."}, :name taoensso.encore/distinct-by, :variadic false, :file "resources/www/js/out/taoensso/encore.cljs", :end-column 18, :method-params ([keyfn coll]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1078, :end-line 1078, :max-fixed-arity 2, :fn-var true, :arglists (quote ([keyfn coll])), :doc "Like `sort-by` for distinct. Based on clojure.core/distinct."}, nvec? {:protocol-inline nil, :meta {:file "/Users/luposlip/enterlab/cordevicljs/resources/www/js/out/taoensso/encore.cljs", :line 238, :column 9, :end-line 238, :end-column 14, :arglists (quote ([n x]))}, :name taoensso.encore/nvec?, :variadic false, :file "resources/www/js/out/taoensso/encore.cljs", :end-column 14, :method-params ([n x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 238, :end-line 238, :max-fixed-arity 2, :fn-var true, :arglists (quote ([n x]))}, path {:protocol-inline nil, :meta {:file "/Users/luposlip/enterlab/cordevicljs/resources/www/js/out/taoensso/encore.cljs", :line 1240, :column 7, :end-line 1240, :end-column 11, :arglists (quote ([& parts])), :doc "Joins string paths (URLs, file paths, etc.) ensuring correct \"/\"\n  interposition.", :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(parts)], :arglists ([& parts]), :arglists-meta (nil)}}, :name taoensso.encore/path, :variadic true, :file "resources/www/js/out/taoensso/encore.cljs", :end-column 11, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(parts)], :arglists ([& parts]), :arglists-meta (nil)}, :method-params [(parts)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 1240, :end-line 1240, :max-fixed-arity 0, :fn-var true, :arglists ([& parts]), :doc "Joins string paths (URLs, file paths, etc.) ensuring correct \"/\"\n  interposition."}, contains-in? {:protocol-inline nil, :meta {:file "/Users/luposlip/enterlab/cordevicljs/resources/www/js/out/taoensso/encore.cljs", :line 901, :column 7, :end-line 901, :end-column 19, :arglists (quote ([coll ks]))}, :name taoensso.encore/contains-in?, :variadic false, :file "resources/www/js/out/taoensso/encore.cljs", :end-column 19, :method-params ([coll ks]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 901, :end-line 901, :max-fixed-arity 2, :fn-var true, :arglists (quote ([coll ks]))}, filter-kvs {:protocol-inline nil, :meta {:file "/Users/luposlip/enterlab/cordevicljs/resources/www/js/out/taoensso/encore.cljs", :line 960, :column 7, :end-line 960, :end-column 17, :arglists (quote ([predk predv m]))}, :name taoensso.encore/filter-kvs, :variadic false, :file "resources/www/js/out/taoensso/encore.cljs", :end-column 17, :method-params ([predk predv m]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 960, :end-line 960, :max-fixed-arity 3, :fn-var true, :arglists (quote ([predk predv m]))}, swap-in! {:protocol-inline nil, :meta {:file "/Users/luposlip/enterlab/cordevicljs/resources/www/js/out/taoensso/encore.cljs", :line 817, :column 7, :end-line 817, :end-column 15, :arglists (quote ([atom_ ks f] [atom_ ks f & more])), :doc "More powerful version of `swap!`:\n    * Supports optional `update-in` semantics.\n    * Swap fn can return `(swapped <new-val> <return-val>)` rather than just\n      <new-val>. This is useful when writing atomic pull fns, etc.", :top-fn {:variadic true, :max-fixed-arity 3, :method-params ([atom_ ks f]), :arglists ([atom_ ks f] [atom_ ks f & more]), :arglists-meta (nil nil)}}, :name taoensso.encore/swap-in!, :variadic true, :file "resources/www/js/out/taoensso/encore.cljs", :end-column 15, :top-fn {:variadic true, :max-fixed-arity 3, :method-params ([atom_ ks f]), :arglists ([atom_ ks f] [atom_ ks f & more]), :arglists-meta (nil nil)}, :method-params ([atom_ ks f]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 817, :end-line 817, :max-fixed-arity 3, :fn-var true, :arglists ([atom_ ks f] [atom_ ks f & more]), :doc "More powerful version of `swap!`:\n    * Supports optional `update-in` semantics.\n    * Swap fn can return `(swapped <new-val> <return-val>)` rather than just\n      <new-val>. This is useful when writing atomic pull fns, etc."}, warnf {:protocol-inline nil, :meta {:file "/Users/luposlip/enterlab/cordevicljs/resources/www/js/out/taoensso/encore.cljs", :line 1709, :column 11, :end-line 1709, :end-column 16, :arglists (quote ([fmt & xs])), :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(fmt xs)], :arglists ([fmt & xs]), :arglists-meta (nil)}}, :name taoensso.encore/warnf, :variadic true, :file "resources/www/js/out/taoensso/encore.cljs", :end-column 16, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(fmt xs)], :arglists ([fmt & xs]), :arglists-meta (nil)}, :method-params [(fmt xs)], :protocol-impl nil, :arglists-meta (nil), :column 5, :line 1709, :end-line 1709, :max-fixed-arity 1, :fn-var true, :arglists ([fmt & xs])}, memoize* {:protocol-inline nil, :meta {:file "/Users/luposlip/enterlab/cordevicljs/resources/www/js/out/taoensso/encore.cljs", :line 1353, :column 7, :end-line 1353, :end-column 15, :arglists (quote ([f] [ttl-ms f] [cache-size ttl-ms f])), :doc "Like `clojure.core/memoize` but:\n    * Uses delays to prevent race conditions on writes.\n    * Supports auto invalidation & gc with `ttl-ms` option.\n    * Supports manual invalidation by prepending args with `:mem/del` or `:mem/fresh`.\n    * Supports cache size limit & gc with `cache-size` option.", :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([f] [ttl-ms f] [cache-size ttl-ms f]), :arglists ([f] [ttl-ms f] [cache-size ttl-ms f]), :arglists-meta (nil nil nil)}}, :name taoensso.encore/memoize*, :variadic false, :file "resources/www/js/out/taoensso/encore.cljs", :end-column 15, :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([f] [ttl-ms f] [cache-size ttl-ms f]), :arglists ([f] [ttl-ms f] [cache-size ttl-ms f]), :arglists-meta (nil nil nil)}, :method-params ([f] [ttl-ms f] [cache-size ttl-ms f]), :protocol-impl nil, :arglists-meta (nil nil nil), :column 1, :line 1353, :end-line 1353, :max-fixed-arity 3, :fn-var true, :arglists ([f] [ttl-ms f] [cache-size ttl-ms f]), :doc "Like `clojure.core/memoize` but:\n    * Uses delays to prevent race conditions on writes.\n    * Supports auto invalidation & gc with `ttl-ms` option.\n    * Supports manual invalidation by prepending args with `:mem/del` or `:mem/fresh`.\n    * Supports cache size limit & gc with `cache-size` option."}, spaced-str {:protocol-inline nil, :meta {:file "/Users/luposlip/enterlab/cordevicljs/resources/www/js/out/taoensso/encore.cljs", :line 1178, :column 7, :end-line 1178, :end-column 17, :arglists (quote ([xs]))}, :name taoensso.encore/spaced-str, :variadic false, :file "resources/www/js/out/taoensso/encore.cljs", :end-column 17, :method-params ([xs]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1178, :end-line 1178, :max-fixed-arity 1, :fn-var true, :arglists (quote ([xs]))}, merge-deep {:name taoensso.encore/merge-deep, :file "resources/www/js/out/taoensso/encore.cljs", :line 2020, :column 1, :end-line 2020, :end-column 16, :meta {:file "/Users/luposlip/enterlab/cordevicljs/resources/www/js/out/taoensso/encore.cljs", :line 2020, :column 6, :end-line 2020, :end-column 16}}, hthrow {:protocol-inline nil, :meta {:file "/Users/luposlip/enterlab/cordevicljs/resources/www/js/out/taoensso/encore.cljs", :line 311, :column 7, :end-line 311, :end-column 13, :arglists (quote ([hard? ns-str ?line form val & [?err]])), :doc "Implementation detail.", :top-fn {:variadic true, :max-fixed-arity 5, :method-params [(hard? ns-str ?line form val [?err])], :arglists ([hard? ns-str ?line form val & [?err]]), :arglists-meta (nil)}}, :name taoensso.encore/hthrow, :variadic true, :file "resources/www/js/out/taoensso/encore.cljs", :end-column 13, :top-fn {:variadic true, :max-fixed-arity 5, :method-params [(hard? ns-str ?line form val [?err])], :arglists ([hard? ns-str ?line form val & [?err]]), :arglists-meta (nil)}, :method-params [(hard? ns-str ?line form val [?err])], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 311, :end-line 311, :max-fixed-arity 5, :fn-var true, :arglists ([hard? ns-str ?line form val & [?err]]), :doc "Implementation detail."}, join-once {:protocol-inline nil, :meta {:file "/Users/luposlip/enterlab/cordevicljs/resources/www/js/out/taoensso/encore.cljs", :line 1222, :column 7, :end-line 1222, :end-column 16, :arglists (quote ([separator & coll])), :doc "Like `clojure.string/join` but ensures no double separators.", :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(separator coll)], :arglists ([separator & coll]), :arglists-meta (nil)}}, :name taoensso.encore/join-once, :variadic true, :file "resources/www/js/out/taoensso/encore.cljs", :end-column 16, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(separator coll)], :arglists ([separator & coll]), :arglists-meta (nil)}, :method-params [(separator coll)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 1222, :end-line 1222, :max-fixed-arity 1, :fn-var true, :arglists ([separator & coll]), :doc "Like `clojure.string/join` but ensures no double separators."}, console-log {:name taoensso.encore/console-log, :file "resources/www/js/out/taoensso/encore.cljs", :line 1644, :column 3, :end-line 1644, :end-column 19, :meta {:file "/Users/luposlip/enterlab/cordevicljs/resources/www/js/out/taoensso/encore.cljs", :line 1644, :column 8, :end-line 1644, :end-column 19}}, get-window-location {:protocol-inline nil, :meta {:file "/Users/luposlip/enterlab/cordevicljs/resources/www/js/out/taoensso/encore.cljs", :line 1715, :column 7, :end-line 1715, :end-column 26, :arglists (quote ([])), :doc "Returns browser window's current location. Forgeable."}, :name taoensso.encore/get-window-location, :variadic false, :file "resources/www/js/out/taoensso/encore.cljs", :end-column 26, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1715, :end-line 1715, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :doc "Returns browser window's current location. Forgeable."}, format {:protocol-inline nil, :meta {:file "/Users/luposlip/enterlab/cordevicljs/resources/www/js/out/taoensso/encore.cljs", :line 1180, :column 7, :end-line 1180, :end-column 13, :arglists (quote ([fmt & args])), :doc "Like `clojure.core/format` but:\n    * Returns \"\" when fmt is nil rather than throwing an NPE.\n    * Formats nil as \"nil\" rather than \"null\".\n    * Provides ClojureScript support via goog.string.format (this has fewer\n      formatting options!).", :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(fmt args)], :arglists ([fmt & args]), :arglists-meta (nil)}}, :name taoensso.encore/format, :variadic true, :file "resources/www/js/out/taoensso/encore.cljs", :end-column 13, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(fmt args)], :arglists ([fmt & args]), :arglists-meta (nil)}, :method-params [(fmt args)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 1180, :end-line 1180, :max-fixed-arity 1, :fn-var true, :arglists ([fmt & args]), :doc "Like `clojure.core/format` but:\n    * Returns \"\" when fmt is nil rather than throwing an NPE.\n    * Formats nil as \"nil\" rather than \"null\".\n    * Provides ClojureScript support via goog.string.format (this has fewer\n      formatting options!)."}, as-int {:protocol-inline nil, :meta {:file "/Users/luposlip/enterlab/cordevicljs/resources/www/js/out/taoensso/encore.cljs", :line 2016, :column 7, :end-line 2016, :end-column 13, :arglists (quote ([x]))}, :name taoensso.encore/as-int, :variadic false, :file "resources/www/js/out/taoensso/encore.cljs", :end-column 13, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 2016, :end-line 2016, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, nnil-set {:protocol-inline nil, :meta {:file "/Users/luposlip/enterlab/cordevicljs/resources/www/js/out/taoensso/encore.cljs", :line 289, :column 7, :end-line 289, :end-column 15, :arglists (quote ([x]))}, :name taoensso.encore/nnil-set, :variadic false, :file "resources/www/js/out/taoensso/encore.cljs", :end-column 15, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 289, :end-line 289, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, swapped {:protocol-inline nil, :meta {:file "/Users/luposlip/enterlab/cordevicljs/resources/www/js/out/taoensso/encore.cljs", :line 754, :column 12, :end-line 754, :end-column 19, :arglists (quote ([new-val return-val]))}, :name taoensso.encore/swapped, :variadic false, :file "resources/www/js/out/taoensso/encore.cljs", :end-column 19, :method-params ([new-val return-val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 754, :end-line 754, :max-fixed-arity 2, :fn-var true, :arglists (quote ([new-val return-val]))}, logging-level {:name taoensso.encore/logging-level, :file "resources/www/js/out/taoensso/encore.cljs", :line 1996, :column 1, :end-line 1996, :end-column 19, :meta {:file "/Users/luposlip/enterlab/cordevicljs/resources/www/js/out/taoensso/encore.cljs", :line 1996, :column 6, :end-line 1996, :end-column 19}}, sub-indexes {:protocol-inline nil, :meta {:file "/Users/luposlip/enterlab/cordevicljs/resources/www/js/out/taoensso/encore.cljs", :line 700, :column 7, :end-line 700, :end-column 18, :arglists (quote ([x start-idx & {:keys [max-len end-idx]}])), :doc "Returns [<inclusive-start-idx*> <exclusive-end-idx*>] for counted 0-indexed\n  input (str, vec, etc.) with support for:\n    * Clamping of indexes beyond limits.\n    * Max-length -> end-index.\n    * -ive indexes (as +ive indexes but work from back of input):\n      (+0) (+1) (+2) (+3) (+4)  ; inclusive +ive indexes\n        h    e    l    l    o   ; 5 count\n      (-5) (-4) (-3) (-2) (-1)  ; inclusive -ive indexes", :top-fn {:variadic true, :max-fixed-arity 2, :method-params [(x start-idx {:keys [max-len end-idx]})], :arglists ([x start-idx & {:keys [max-len end-idx]}]), :arglists-meta (nil)}}, :name taoensso.encore/sub-indexes, :variadic true, :file "resources/www/js/out/taoensso/encore.cljs", :end-column 18, :top-fn {:variadic true, :max-fixed-arity 2, :method-params [(x start-idx {:keys [max-len end-idx]})], :arglists ([x start-idx & {:keys [max-len end-idx]}]), :arglists-meta (nil)}, :method-params [(x start-idx {:keys [max-len end-idx]})], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 700, :end-line 700, :max-fixed-arity 2, :fn-var true, :arglists ([x start-idx & {:keys [max-len end-idx]}]), :doc "Returns [<inclusive-start-idx*> <exclusive-end-idx*>] for counted 0-indexed\n  input (str, vec, etc.) with support for:\n    * Clamping of indexes beyond limits.\n    * Max-length -> end-index.\n    * -ive indexes (as +ive indexes but work from back of input):\n      (+0) (+1) (+2) (+3) (+4)  ; inclusive +ive indexes\n        h    e    l    l    o   ; 5 count\n      (-5) (-4) (-3) (-2) (-1)  ; inclusive -ive indexes"}, log-level-sufficient? {:name taoensso.encore/log-level-sufficient?, :file "resources/www/js/out/taoensso/encore.cljs", :line 1681, :column 3, :end-line 1681, :end-column 39, :private true, :meta {:file "/Users/luposlip/enterlab/cordevicljs/resources/www/js/out/taoensso/encore.cljs", :line 1681, :column 18, :end-line 1681, :end-column 39, :private true}}, undefined->nil {:protocol-inline nil, :meta {:file "/Users/luposlip/enterlab/cordevicljs/resources/www/js/out/taoensso/encore.cljs", :line 1170, :column 14, :end-line 1170, :end-column 28, :arglists (quote ([x]))}, :name taoensso.encore/undefined->nil, :variadic false, :file "resources/www/js/out/taoensso/encore.cljs", :end-column 28, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 8, :line 1170, :end-line 1170, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, now-dt {:protocol-inline nil, :meta {:file "/Users/luposlip/enterlab/cordevicljs/resources/www/js/out/taoensso/encore.cljs", :line 603, :column 8, :end-line 603, :end-column 14, :arglists (quote ([]))}, :name taoensso.encore/now-dt, :variadic false, :file "resources/www/js/out/taoensso/encore.cljs", :end-column 14, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 603, :end-line 603, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, repeatedly-into {:protocol-inline nil, :meta {:file "/Users/luposlip/enterlab/cordevicljs/resources/www/js/out/taoensso/encore.cljs", :line 1136, :column 7, :end-line 1136, :end-column 22, :arglists (quote ([coll n f])), :doc "Like `repeatedly` but faster and `conj`s items into given collection."}, :name taoensso.encore/repeatedly-into, :variadic false, :file "resources/www/js/out/taoensso/encore.cljs", :end-column 22, :method-params ([coll n f]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1136, :end-line 1136, :max-fixed-arity 3, :fn-var true, :arglists (quote ([coll n f])), :doc "Like `repeatedly` but faster and `conj`s items into given collection."}, coerce-xhr-params {:protocol-inline nil, :meta {:file "/Users/luposlip/enterlab/cordevicljs/resources/www/js/out/taoensso/encore.cljs", :line 1743, :column 8, :end-line 1743, :end-column 25, :private true, :arglists (quote ([uri method params])), :doc "[uri method get-or-post-params] -> [uri post-content]"}, :private true, :name taoensso.encore/coerce-xhr-params, :variadic false, :file "resources/www/js/out/taoensso/encore.cljs", :end-column 25, :method-params ([uri method params]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1743, :end-line 1743, :max-fixed-arity 3, :fn-var true, :arglists (quote ([uri method params])), :doc "[uri method get-or-post-params] -> [uri post-content]"}, nnil? {:protocol-inline nil, :meta {:file "/Users/luposlip/enterlab/cordevicljs/resources/www/js/out/taoensso/encore.cljs", :line 233, :column 11, :end-line 233, :end-column 16, :arglists (quote ([x]))}, :name taoensso.encore/nnil?, :variadic false, :file "resources/www/js/out/taoensso/encore.cljs", :end-column 16, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 233, :end-line 233, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, memoize-1 {:protocol-inline nil, :meta {:file "/Users/luposlip/enterlab/cordevicljs/resources/www/js/out/taoensso/encore.cljs", :line 1510, :column 7, :end-line 1510, :end-column 16, :arglists (quote ([f])), :doc "A particularly cheap+simple single-val memoize. Useful for Reactjs render op\n  caching on mobile devices, etc."}, :name taoensso.encore/memoize-1, :variadic false, :file "resources/www/js/out/taoensso/encore.cljs", :end-column 16, :method-params ([f]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1510, :end-line 1510, :max-fixed-arity 1, :fn-var true, :arglists (quote ([f])), :doc "A particularly cheap+simple single-val memoize. Useful for Reactjs render op\n  caching on mobile devices, etc."}, str-contains? {:protocol-inline nil, :meta {:file "/Users/luposlip/enterlab/cordevicljs/resources/www/js/out/taoensso/encore.cljs", :line 1207, :column 7, :end-line 1207, :end-column 20, :arglists (quote ([s substr]))}, :name taoensso.encore/str-contains?, :variadic false, :file "resources/www/js/out/taoensso/encore.cljs", :end-column 20, :method-params ([s substr]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1207, :end-line 1207, :max-fixed-arity 2, :fn-var true, :arglists (quote ([s substr]))}, filter-vals {:protocol-inline nil, :meta {:file "/Users/luposlip/enterlab/cordevicljs/resources/www/js/out/taoensso/encore.cljs", :line 965, :column 7, :end-line 965, :end-column 18, :arglists (quote ([pred m]))}, :name taoensso.encore/filter-vals, :variadic false, :file "resources/www/js/out/taoensso/encore.cljs", :end-column 18, :method-params ([pred m]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 965, :end-line 965, :max-fixed-arity 2, :fn-var true, :arglists (quote ([pred m]))}, ks-nnil? {:protocol-inline nil, :meta {:file "/Users/luposlip/enterlab/cordevicljs/resources/www/js/out/taoensso/encore.cljs", :line 298, :column 7, :end-line 298, :end-column 15, :arglists (quote ([ks m]))}, :name taoensso.encore/ks-nnil?, :variadic false, :file "resources/www/js/out/taoensso/encore.cljs", :end-column 15, :method-params ([ks m]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 298, :end-line 298, :max-fixed-arity 2, :fn-var true, :arglists (quote ([ks m]))}, *log-level* {:name taoensso.encore/*log-level*, :file "resources/www/js/out/taoensso/encore.cljs", :line 1658, :column 3, :end-line 1658, :end-column 45, :dynamic true, :doc "Log only logging calls >= <this-level>. Change val with `set!`/`binding`.", :meta {:file "/Users/luposlip/enterlab/cordevicljs/resources/www/js/out/taoensso/encore.cljs", :line 1658, :column 34, :end-line 1658, :end-column 45, :dynamic true, :doc "Log only logging calls >= <this-level>. Change val with `set!`/`binding`."}}, takev {:protocol-inline nil, :meta {:file "/Users/luposlip/enterlab/cordevicljs/resources/www/js/out/taoensso/encore.cljs", :line 1047, :column 7, :end-line 1047, :end-column 12, :arglists (quote ([n coll]))}, :name taoensso.encore/takev, :variadic false, :file "resources/www/js/out/taoensso/encore.cljs", :end-column 12, :method-params ([n coll]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1047, :end-line 1047, :max-fixed-arity 2, :fn-var true, :arglists (quote ([n coll]))}, count-words {:protocol-inline nil, :meta {:file "/Users/luposlip/enterlab/cordevicljs/resources/www/js/out/taoensso/encore.cljs", :line 1265, :column 7, :end-line 1265, :end-column 18, :arglists (quote ([s]))}, :name taoensso.encore/count-words, :variadic false, :file "resources/www/js/out/taoensso/encore.cljs", :end-column 18, :method-params ([s]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1265, :end-line 1265, :max-fixed-arity 1, :fn-var true, :arglists (quote ([s]))}, ms->secs {:protocol-inline nil, :meta {:file "/Users/luposlip/enterlab/cordevicljs/resources/www/js/out/taoensso/encore.cljs", :line 617, :column 7, :end-line 617, :end-column 15, :arglists (quote ([ms]))}, :name taoensso.encore/ms->secs, :variadic false, :file "resources/www/js/out/taoensso/encore.cljs", :end-column 15, :method-params ([ms]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 617, :end-line 617, :max-fixed-arity 1, :fn-var true, :arglists (quote ([ms]))}, mapply {:protocol-inline nil, :meta {:file "/Users/luposlip/enterlab/cordevicljs/resources/www/js/out/taoensso/encore.cljs", :line 936, :column 7, :end-line 936, :end-column 13, :arglists (quote ([f & args])), :doc "Like `apply` but assumes last arg is a map whose elements should be applied\n  to `f` as an unpaired seq:\n    (mapply (fn [x & {:keys [y z]}] (str x y z)) 1 {:y 2 :z 3})\n      where fn will receive args as: `(1 :y 2 :z 3)`.", :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(f args)], :arglists ([f & args]), :arglists-meta (nil)}}, :name taoensso.encore/mapply, :variadic true, :file "resources/www/js/out/taoensso/encore.cljs", :end-column 13, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(f args)], :arglists ([f & args]), :arglists-meta (nil)}, :method-params [(f args)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 936, :end-line 936, :max-fixed-arity 1, :fn-var true, :arglists ([f & args]), :doc "Like `apply` but assumes last arg is a map whose elements should be applied\n  to `f` as an unpaired seq:\n    (mapply (fn [x & {:keys [y z]}] (str x y z)) 1 {:y 2 :z 3})\n      where fn will receive args as: `(1 :y 2 :z 3)`."}, error-data {:protocol-inline nil, :meta {:file "/Users/luposlip/enterlab/cordevicljs/resources/www/js/out/taoensso/encore.cljs", :line 197, :column 7, :end-line 197, :end-column 17, :arglists (quote ([x])), :doc "Returns data map iff `x` is an error of any type on platform."}, :name taoensso.encore/error-data, :variadic false, :file "resources/www/js/out/taoensso/encore.cljs", :end-column 17, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 197, :end-line 197, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x])), :doc "Returns data map iff `x` is an error of any type on platform."}, map->Swapped {:protocol-inline nil, :meta {:file "/Users/luposlip/enterlab/cordevicljs/resources/www/js/out/taoensso/encore.cljs", :line 753, :column 12, :end-line 753, :end-column 19, :internal-ctor true, :factory :map, :arglists (quote ([G__30277]))}, :name taoensso.encore/map->Swapped, :variadic false, :file "resources/www/js/out/taoensso/encore.cljs", :end-column 19, :method-params ([G__30277]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :map, :line 753, :end-line 753, :max-fixed-arity 1, :fn-var true, :arglists (quote ([G__30277]))}, queue {:protocol-inline nil, :meta {:file "/Users/luposlip/enterlab/cordevicljs/resources/www/js/out/taoensso/encore.cljs", :line 922, :column 7, :end-line 922, :end-column 12, :arglists (quote ([] [coll])), :doc "Returns a PersistentQueue.", :top-fn {:variadic false, :max-fixed-arity 1, :method-params ([] [coll]), :arglists ([] [coll]), :arglists-meta (nil nil)}}, :name taoensso.encore/queue, :variadic false, :file "resources/www/js/out/taoensso/encore.cljs", :end-column 12, :top-fn {:variadic false, :max-fixed-arity 1, :method-params ([] [coll]), :arglists ([] [coll]), :arglists-meta (nil nil)}, :method-params ([] [coll]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 922, :end-line 922, :max-fixed-arity 1, :fn-var true, :arglists ([] [coll]), :doc "Returns a PersistentQueue."}, reset-in! {:protocol-inline nil, :meta {:file "/Users/luposlip/enterlab/cordevicljs/resources/www/js/out/taoensso/encore.cljs", :line 848, :column 7, :end-line 848, :end-column 16, :arglists (quote ([atom_ ks new-val] [atom_ ks new-val & more])), :doc "Is to `reset!` as `swap-in!` is to `swap!`.", :top-fn {:variadic true, :max-fixed-arity 3, :method-params ([atom_ ks new-val]), :arglists ([atom_ ks new-val] [atom_ ks new-val & more]), :arglists-meta (nil nil)}}, :name taoensso.encore/reset-in!, :variadic true, :file "resources/www/js/out/taoensso/encore.cljs", :end-column 16, :top-fn {:variadic true, :max-fixed-arity 3, :method-params ([atom_ ks new-val]), :arglists ([atom_ ks new-val] [atom_ ks new-val & more]), :arglists-meta (nil nil)}, :method-params ([atom_ ks new-val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 848, :end-line 848, :max-fixed-arity 3, :fn-var true, :arglists ([atom_ ks new-val] [atom_ ks new-val & more]), :doc "Is to `reset!` as `swap-in!` is to `swap!`."}, remove-vals {:protocol-inline nil, :meta {:file "/Users/luposlip/enterlab/cordevicljs/resources/www/js/out/taoensso/encore.cljs", :line 969, :column 7, :end-line 969, :end-column 18, :arglists (quote ([pred m])), :doc "Smaller, common-case version of `filter-vals`. Esp useful with `nil?`/`blank?`\n  pred when constructing maps: {:foo (when _ <...>) :bar (when _ <...>)} in a\n  way that preservers :or semantics."}, :name taoensso.encore/remove-vals, :variadic false, :file "resources/www/js/out/taoensso/encore.cljs", :end-column 18, :method-params ([pred m]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 969, :end-line 969, :max-fixed-arity 2, :fn-var true, :arglists (quote ([pred m])), :doc "Smaller, common-case version of `filter-vals`. Esp useful with `nil?`/`blank?`\n  pred when constructing maps: {:foo (when _ <...>) :bar (when _ <...>)} in a\n  way that preservers :or semantics."}, round* {:name taoensso.encore/round*, :file "resources/www/js/out/taoensso/encore.cljs", :line 577, :column 1, :end-line 577, :end-column 12, :meta {:file "/Users/luposlip/enterlab/cordevicljs/resources/www/js/out/taoensso/encore.cljs", :line 577, :column 6, :end-line 577, :end-column 12}}, pos-num? {:protocol-inline nil, :meta {:file "/Users/luposlip/enterlab/cordevicljs/resources/www/js/out/taoensso/encore.cljs", :line 247, :column 10, :end-line 247, :end-column 18, :arglists (quote ([x]))}, :name taoensso.encore/pos-num?, :variadic false, :file "resources/www/js/out/taoensso/encore.cljs", :end-column 18, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 247, :end-line 247, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, stringy? {:protocol-inline nil, :meta {:file "/Users/luposlip/enterlab/cordevicljs/resources/www/js/out/taoensso/encore.cljs", :line 181, :column 7, :end-line 181, :end-column 15, :arglists (quote ([x]))}, :name taoensso.encore/stringy?, :variadic false, :file "resources/www/js/out/taoensso/encore.cljs", :end-column 15, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 181, :end-line 181, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, vec2? {:protocol-inline nil, :meta {:file "/Users/luposlip/enterlab/cordevicljs/resources/www/js/out/taoensso/encore.cljs", :line 241, :column 7, :end-line 241, :end-column 12, :arglists (quote ([x]))}, :name taoensso.encore/vec2?, :variadic false, :file "resources/www/js/out/taoensso/encore.cljs", :end-column 12, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 241, :end-line 241, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, parse-float {:name taoensso.encore/parse-float, :file "resources/www/js/out/taoensso/encore.cljs", :line 2014, :column 1, :end-line 2014, :end-column 17, :meta {:file "/Users/luposlip/enterlab/cordevicljs/resources/www/js/out/taoensso/encore.cljs", :line 2014, :column 6, :end-line 2014, :end-column 17}}, as-?int {:protocol-inline nil, :meta {:file "/Users/luposlip/enterlab/cordevicljs/resources/www/js/out/taoensso/encore.cljs", :line 258, :column 7, :end-line 258, :end-column 14, :arglists (quote ([x]))}, :name taoensso.encore/as-?int, :variadic false, :file "resources/www/js/out/taoensso/encore.cljs", :end-column 14, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 258, :end-line 258, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, ks<= {:protocol-inline nil, :meta {:file "/Users/luposlip/enterlab/cordevicljs/resources/www/js/out/taoensso/encore.cljs", :line 296, :column 7, :end-line 296, :end-column 11, :arglists (quote ([ks m]))}, :name taoensso.encore/ks<=, :variadic false, :file "resources/www/js/out/taoensso/encore.cljs", :end-column 11, :method-params ([ks m]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 296, :end-line 296, :max-fixed-arity 2, :fn-var true, :arglists (quote ([ks m]))}, name-with-attrs {:protocol-inline nil, :meta {:file "/Users/luposlip/enterlab/cordevicljs/resources/www/js/out/taoensso/encore.cljs", :line 76, :column 7, :end-line 76, :end-column 22, :arglists (quote ([name macro-args])), :doc "Handles optional docstrings & attr maps for a macro def's name.\n  Stolen from `clojure.tools.macro`."}, :name taoensso.encore/name-with-attrs, :variadic false, :file "resources/www/js/out/taoensso/encore.cljs", :end-column 22, :method-params ([name macro-args]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 76, :end-line 76, :max-fixed-arity 2, :fn-var true, :arglists (quote ([name macro-args])), :doc "Handles optional docstrings & attr maps for a macro def's name.\n  Stolen from `clojure.tools.macro`."}, pow {:protocol-inline nil, :meta {:file "/Users/luposlip/enterlab/cordevicljs/resources/www/js/out/taoensso/encore.cljs", :line 557, :column 7, :end-line 557, :end-column 10, :arglists (quote ([n exp]))}, :name taoensso.encore/pow, :variadic false, :file "resources/www/js/out/taoensso/encore.cljs", :end-column 10, :method-params ([n exp]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 557, :end-line 557, :max-fixed-arity 2, :fn-var true, :arglists (quote ([n exp]))}, exp-backoff {:protocol-inline nil, :meta {:file "/Users/luposlip/enterlab/cordevicljs/resources/www/js/out/taoensso/encore.cljs", :line 593, :column 7, :end-line 593, :end-column 18, :arglists (quote ([nattempt & [{:keys [factor], min' :min, max' :max, :or {factor 1000}}]])), :doc "Returns binary exponential backoff value.", :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(nattempt [{:keys [factor], min' :min, max' :max, :or {factor 1000}}])], :arglists ([nattempt & [{:keys [factor], min' :min, max' :max, :or {factor 1000}}]]), :arglists-meta (nil)}}, :name taoensso.encore/exp-backoff, :variadic true, :file "resources/www/js/out/taoensso/encore.cljs", :end-column 18, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(nattempt [{:keys [factor], min' :min, max' :max, :or {factor 1000}}])], :arglists ([nattempt & [{:keys [factor], min' :min, max' :max, :or {factor 1000}}]]), :arglists-meta (nil)}, :method-params [(nattempt [{:keys [factor], min' :min, max' :max, :or {factor 1000}}])], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 593, :end-line 593, :max-fixed-arity 1, :fn-var true, :arglists ([nattempt & [{:keys [factor], min' :min, max' :max, :or {factor 1000}}]]), :doc "Returns binary exponential backoff value."}, swap-val! {:protocol-inline nil, :meta {:file "/Users/luposlip/enterlab/cordevicljs/resources/www/js/out/taoensso/encore.cljs", :line 1334, :column 7, :end-line 1334, :end-column 16, :arglists (quote ([atom_ k f])), :doc "Swaps associative value at key and returns the new value.\n  Specialized, fast `swap-in!` for use mostly by memoization utils."}, :name taoensso.encore/swap-val!, :variadic false, :file "resources/www/js/out/taoensso/encore.cljs", :end-column 16, :method-params ([atom_ k f]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1334, :end-line 1334, :max-fixed-arity 3, :fn-var true, :arglists (quote ([atom_ k f])), :doc "Swaps associative value at key and returns the new value.\n  Specialized, fast `swap-in!` for use mostly by memoization utils."}, map-keys {:protocol-inline nil, :meta {:file "/Users/luposlip/enterlab/cordevicljs/resources/www/js/out/taoensso/encore.cljs", :line 957, :column 7, :end-line 957, :end-column 15, :arglists (quote ([f m]))}, :name taoensso.encore/map-keys, :variadic false, :file "resources/www/js/out/taoensso/encore.cljs", :end-column 15, :method-params ([f m]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 957, :end-line 957, :max-fixed-arity 2, :fn-var true, :arglists (quote ([f m]))}, substr {:protocol-inline nil, :meta {:file "/Users/luposlip/enterlab/cordevicljs/resources/www/js/out/taoensso/encore.cljs", :line 1196, :column 7, :end-line 1196, :end-column 13, :arglists (quote ([s start-idx & [?max-len]])), :doc "Gives a consistent, flexible, cross-platform substring API built on\n  `sub-indexes`.", :top-fn {:variadic true, :max-fixed-arity 2, :method-params [(s start-idx [?max-len])], :arglists ([s start-idx & [?max-len]]), :arglists-meta (nil)}}, :name taoensso.encore/substr, :variadic true, :file "resources/www/js/out/taoensso/encore.cljs", :end-column 13, :top-fn {:variadic true, :max-fixed-arity 2, :method-params [(s start-idx [?max-len])], :arglists ([s start-idx & [?max-len]]), :arglists-meta (nil)}, :method-params [(s start-idx [?max-len])], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 1196, :end-line 1196, :max-fixed-arity 2, :fn-var true, :arglists ([s start-idx & [?max-len]]), :doc "Gives a consistent, flexible, cross-platform substring API built on\n  `sub-indexes`."}, conj-some {:protocol-inline nil, :meta {:file "/Users/luposlip/enterlab/cordevicljs/resources/www/js/out/taoensso/encore.cljs", :line 290, :column 7, :end-line 290, :end-column 16, :arglists (quote ([coll ?x]))}, :name taoensso.encore/conj-some, :variadic false, :file "resources/www/js/out/taoensso/encore.cljs", :end-column 16, :method-params ([coll ?x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 290, :end-line 290, :max-fixed-arity 2, :fn-var true, :arglists (quote ([coll ?x]))}, into-all {:protocol-inline nil, :meta {:file "/Users/luposlip/enterlab/cordevicljs/resources/www/js/out/taoensso/encore.cljs", :line 1020, :column 7, :end-line 1020, :end-column 15, :arglists (quote ([to from] [to from & more])), :doc "Like `into` but supports multiple \"from\"s.", :top-fn {:variadic true, :max-fixed-arity 2, :method-params ([to from]), :arglists ([to from] [to from & more]), :arglists-meta (nil nil)}}, :name taoensso.encore/into-all, :variadic true, :file "resources/www/js/out/taoensso/encore.cljs", :end-column 15, :top-fn {:variadic true, :max-fixed-arity 2, :method-params ([to from]), :arglists ([to from] [to from & more]), :arglists-meta (nil nil)}, :method-params ([to from]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1020, :end-line 1020, :max-fixed-arity 2, :fn-var true, :arglists ([to from] [to from & more]), :doc "Like `into` but supports multiple \"from\"s."}, secs {:name taoensso.encore/secs, :file "resources/www/js/out/taoensso/encore.cljs", :line 637, :column 1, :end-line 637, :end-column 10, :meta {:file "/Users/luposlip/enterlab/cordevicljs/resources/www/js/out/taoensso/encore.cljs", :line 637, :column 6, :end-line 637, :end-column 10}}, nil->str {:protocol-inline nil, :meta {:file "/Users/luposlip/enterlab/cordevicljs/resources/www/js/out/taoensso/encore.cljs", :line 1171, :column 7, :end-line 1171, :end-column 15, :arglists (quote ([x]))}, :name taoensso.encore/nil->str, :variadic false, :file "resources/www/js/out/taoensso/encore.cljs", :end-column 15, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1171, :end-line 1171, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, interleave-all {:protocol-inline nil, :meta {:file "/Users/luposlip/enterlab/cordevicljs/resources/www/js/out/taoensso/encore.cljs", :line 1024, :column 7, :end-line 1024, :end-column 21, :arglists (quote ([] [c1] [c1 c2] [c1 c2 & colls])), :doc "Greedy version of `interleave`.\n  Ref. https://groups.google.com/d/msg/clojure/o4Hg0s_1Avs/rPn3P4Ig6MsJ", :top-fn {:variadic true, :max-fixed-arity 2, :method-params ([] [c1] [c1 c2]), :arglists ([] [c1] [c1 c2] [c1 c2 & colls]), :arglists-meta (nil nil nil nil)}}, :name taoensso.encore/interleave-all, :variadic true, :file "resources/www/js/out/taoensso/encore.cljs", :end-column 21, :top-fn {:variadic true, :max-fixed-arity 2, :method-params ([] [c1] [c1 c2]), :arglists ([] [c1] [c1 c2] [c1 c2 & colls]), :arglists-meta (nil nil nil nil)}, :method-params ([] [c1] [c1 c2]), :protocol-impl nil, :arglists-meta (nil nil nil nil), :column 1, :line 1024, :end-line 1024, :max-fixed-arity 2, :fn-var true, :arglists ([] [c1] [c1 c2] [c1 c2 & colls]), :doc "Greedy version of `interleave`.\n  Ref. https://groups.google.com/d/msg/clojure/o4Hg0s_1Avs/rPn3P4Ig6MsJ"}, swapped*-in {:protocol-inline nil, :meta {:file "/Users/luposlip/enterlab/cordevicljs/resources/www/js/out/taoensso/encore.cljs", :line 767, :column 8, :end-line 767, :end-column 19, :private true, :arglists (quote ([m ks f])), :doc "[<new-val> <return-val>]"}, :private true, :name taoensso.encore/swapped*-in, :variadic false, :file "resources/www/js/out/taoensso/encore.cljs", :end-column 19, :method-params ([m ks f]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 767, :end-line 767, :max-fixed-arity 3, :fn-var true, :arglists (quote ([m ks f])), :doc "[<new-val> <return-val>]"}, merge-url-with-query-string {:protocol-inline nil, :meta {:file "/Users/luposlip/enterlab/cordevicljs/resources/www/js/out/taoensso/encore.cljs", :line 1974, :column 7, :end-line 1974, :end-column 34, :arglists (quote ([url m]))}, :name taoensso.encore/merge-url-with-query-string, :variadic false, :file "resources/www/js/out/taoensso/encore.cljs", :end-column 34, :method-params ([url m]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1974, :end-line 1974, :max-fixed-arity 2, :fn-var true, :arglists (quote ([url m]))}, kw-identical? {:name taoensso.encore/kw-identical?, :file "resources/www/js/out/taoensso/encore.cljs", :line 179, :column 8, :end-line 179, :end-column 26, :meta {:file "/Users/luposlip/enterlab/cordevicljs/resources/www/js/out/taoensso/encore.cljs", :line 179, :column 13, :end-line 179, :end-column 26}}, assoc-conj {:protocol-inline nil, :meta {:file "/Users/luposlip/enterlab/cordevicljs/resources/www/js/out/taoensso/encore.cljs", :line 1946, :column 8, :end-line 1946, :end-column 18, :private true, :arglists (quote ([m k v]))}, :private true, :name taoensso.encore/assoc-conj, :variadic false, :file "resources/www/js/out/taoensso/encore.cljs", :end-column 18, :method-params ([m k v]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1946, :end-line 1946, :max-fixed-arity 3, :fn-var true, :arglists (quote ([m k v]))}, swapped* {:protocol-inline nil, :meta {:file "/Users/luposlip/enterlab/cordevicljs/resources/www/js/out/taoensso/encore.cljs", :line 755, :column 11, :end-line 755, :end-column 19, :private true, :arglists (quote ([x]))}, :private true, :name taoensso.encore/swapped*, :variadic false, :file "resources/www/js/out/taoensso/encore.cljs", :end-column 19, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 755, :end-line 755, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, url-encode {:protocol-inline nil, :meta {:file "/Users/luposlip/enterlab/cordevicljs/resources/www/js/out/taoensso/encore.cljs", :line 1910, :column 7, :end-line 1910, :end-column 17, :arglists (quote ([s])), :doc "Stolen from http://goo.gl/99NSR1."}, :name taoensso.encore/url-encode, :variadic false, :file "resources/www/js/out/taoensso/encore.cljs", :end-column 17, :method-params ([s]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1910, :end-line 1910, :max-fixed-arity 1, :fn-var true, :arglists (quote ([s])), :doc "Stolen from http://goo.gl/99NSR1."}, fzipmap {:protocol-inline nil, :meta {:file "/Users/luposlip/enterlab/cordevicljs/resources/www/js/out/taoensso/encore.cljs", :line 1009, :column 7, :end-line 1009, :end-column 14, :arglists (quote ([ks vs])), :doc "Faster `zipmap`."}, :name taoensso.encore/fzipmap, :variadic false, :file "resources/www/js/out/taoensso/encore.cljs", :end-column 14, :method-params ([ks vs]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1009, :end-line 1009, :max-fixed-arity 2, :fn-var true, :arglists (quote ([ks vs])), :doc "Faster `zipmap`."}, fq-name {:protocol-inline nil, :meta {:file "/Users/luposlip/enterlab/cordevicljs/resources/www/js/out/taoensso/encore.cljs", :line 493, :column 7, :end-line 493, :end-column 14, :arglists (quote ([x])), :doc "Like `name` but includes namespace in string when present."}, :name taoensso.encore/fq-name, :variadic false, :file "resources/www/js/out/taoensso/encore.cljs", :end-column 14, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 493, :end-line 493, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x])), :doc "Like `name` but includes namespace in string when present."}, keys>= {:protocol-inline nil, :meta {:file "/Users/luposlip/enterlab/cordevicljs/resources/www/js/out/taoensso/encore.cljs", :line 2008, :column 7, :end-line 2008, :end-column 13, :arglists (quote ([m ks]))}, :name taoensso.encore/keys>=, :variadic false, :file "resources/www/js/out/taoensso/encore.cljs", :end-column 13, :method-params ([m ks]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 2008, :end-line 2008, :max-fixed-arity 2, :fn-var true, :arglists (quote ([m ks]))}, distinctv {:protocol-inline nil, :meta {:file "/Users/luposlip/enterlab/cordevicljs/resources/www/js/out/taoensso/encore.cljs", :line 1049, :column 7, :end-line 1049, :end-column 16, :arglists (quote ([coll] [keyfn coll])), :doc "Prefer `set` when order doesn't matter (much faster).", :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([coll] [keyfn coll]), :arglists ([coll] [keyfn coll]), :arglists-meta (nil nil)}}, :name taoensso.encore/distinctv, :variadic false, :file "resources/www/js/out/taoensso/encore.cljs", :end-column 16, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([coll] [keyfn coll]), :arglists ([coll] [keyfn coll]), :arglists-meta (nil nil)}, :method-params ([coll] [keyfn coll]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1049, :end-line 1049, :max-fixed-arity 2, :fn-var true, :arglists ([coll] [keyfn coll]), :doc "Prefer `set` when order doesn't matter (much faster)."}, filter-keys {:protocol-inline nil, :meta {:file "/Users/luposlip/enterlab/cordevicljs/resources/www/js/out/taoensso/encore.cljs", :line 964, :column 7, :end-line 964, :end-column 18, :arglists (quote ([pred m]))}, :name taoensso.encore/filter-keys, :variadic false, :file "resources/www/js/out/taoensso/encore.cljs", :end-column 18, :method-params ([pred m]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 964, :end-line 964, :max-fixed-arity 2, :fn-var true, :arglists (quote ([pred m]))}, queue? {:protocol-inline nil, :meta {:file "/Users/luposlip/enterlab/cordevicljs/resources/www/js/out/taoensso/encore.cljs", :line 918, :column 7, :end-line 918, :end-column 13, :arglists (quote ([x]))}, :name taoensso.encore/queue?, :variadic false, :file "resources/www/js/out/taoensso/encore.cljs", :end-column 13, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 918, :end-line 918, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, debugf {:protocol-inline nil, :meta {:file "/Users/luposlip/enterlab/cordevicljs/resources/www/js/out/taoensso/encore.cljs", :line 1707, :column 11, :end-line 1707, :end-column 17, :arglists (quote ([fmt & xs])), :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(fmt xs)], :arglists ([fmt & xs]), :arglists-meta (nil)}}, :name taoensso.encore/debugf, :variadic true, :file "resources/www/js/out/taoensso/encore.cljs", :end-column 17, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(fmt xs)], :arglists ([fmt & xs]), :arglists-meta (nil)}, :method-params [(fmt xs)], :protocol-impl nil, :arglists-meta (nil), :column 5, :line 1707, :end-line 1707, :max-fixed-arity 1, :fn-var true, :arglists ([fmt & xs])}, get-pooled-xhr! {:protocol-inline nil, :meta {:file "/Users/luposlip/enterlab/cordevicljs/resources/www/js/out/taoensso/encore.cljs", :line 1735, :column 8, :end-line 1735, :end-column 23, :private true, :arglists (quote ([])), :doc "Returns an immediately available XhrIo instance, or nil. The instance must be\n  released back to pool manually."}, :private true, :name taoensso.encore/get-pooled-xhr!, :variadic false, :file "resources/www/js/out/taoensso/encore.cljs", :end-column 23, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1735, :end-line 1735, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :doc "Returns an immediately available XhrIo instance, or nil. The instance must be\n  released back to pool manually."}, ks= {:protocol-inline nil, :meta {:file "/Users/luposlip/enterlab/cordevicljs/resources/www/js/out/taoensso/encore.cljs", :line 295, :column 7, :end-line 295, :end-column 10, :arglists (quote ([ks m]))}, :name taoensso.encore/ks=, :variadic false, :file "resources/www/js/out/taoensso/encore.cljs", :end-column 10, :method-params ([ks m]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 295, :end-line 295, :max-fixed-arity 2, :fn-var true, :arglists (quote ([ks m]))}, nnil= {:protocol-inline nil, :meta {:file "/Users/luposlip/enterlab/cordevicljs/resources/www/js/out/taoensso/encore.cljs", :line 278, :column 7, :end-line 278, :end-column 12, :arglists (quote ([x y] [x y & more])), :top-fn {:variadic true, :max-fixed-arity 2, :method-params ([x y]), :arglists ([x y] [x y & more]), :arglists-meta (nil nil)}}, :name taoensso.encore/nnil=, :variadic true, :file "resources/www/js/out/taoensso/encore.cljs", :end-column 12, :top-fn {:variadic true, :max-fixed-arity 2, :method-params ([x y]), :arglists ([x y] [x y & more]), :arglists-meta (nil nil)}, :method-params ([x y]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 278, :end-line 278, :max-fixed-arity 2, :fn-var true, :arglists ([x y] [x y & more])}, now-udt-mock-fn {:protocol-inline nil, :meta {:file "/Users/luposlip/enterlab/cordevicljs/resources/www/js/out/taoensso/encore.cljs", :line 608, :column 7, :end-line 608, :end-column 22, :arglists (quote ([& [mock-udts]])), :doc "Useful for testing.", :top-fn {:variadic true, :max-fixed-arity 0, :method-params [([mock-udts])], :arglists ([& [mock-udts]]), :arglists-meta (nil)}}, :name taoensso.encore/now-udt-mock-fn, :variadic true, :file "resources/www/js/out/taoensso/encore.cljs", :end-column 22, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [([mock-udts])], :arglists ([& [mock-udts]]), :arglists-meta (nil)}, :method-params [([mock-udts])], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 608, :end-line 608, :max-fixed-arity 0, :fn-var true, :arglists ([& [mock-udts]]), :doc "Useful for testing."}, tracef {:protocol-inline nil, :meta {:file "/Users/luposlip/enterlab/cordevicljs/resources/www/js/out/taoensso/encore.cljs", :line 1706, :column 11, :end-line 1706, :end-column 17, :arglists (quote ([fmt & xs])), :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(fmt xs)], :arglists ([fmt & xs]), :arglists-meta (nil)}}, :name taoensso.encore/tracef, :variadic true, :file "resources/www/js/out/taoensso/encore.cljs", :end-column 17, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(fmt xs)], :arglists ([fmt & xs]), :arglists-meta (nil)}, :method-params [(fmt xs)], :protocol-impl nil, :arglists-meta (nil), :column 5, :line 1706, :end-line 1706, :max-fixed-arity 1, :fn-var true, :arglists ([fmt & xs])}, xhr-pool_ {:name taoensso.encore/xhr-pool_, :file "resources/www/js/out/taoensso/encore.cljs", :line 1733, :column 8, :end-line 1733, :end-column 32, :private true, :meta {:file "/Users/luposlip/enterlab/cordevicljs/resources/www/js/out/taoensso/encore.cljs", :line 1733, :column 23, :end-line 1733, :end-column 32, :private true}}, as-float {:protocol-inline nil, :meta {:file "/Users/luposlip/enterlab/cordevicljs/resources/www/js/out/taoensso/encore.cljs", :line 2017, :column 7, :end-line 2017, :end-column 15, :arglists (quote ([x]))}, :name taoensso.encore/as-float, :variadic false, :file "resources/www/js/out/taoensso/encore.cljs", :end-column 15, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 2017, :end-line 2017, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, infof {:protocol-inline nil, :meta {:file "/Users/luposlip/enterlab/cordevicljs/resources/www/js/out/taoensso/encore.cljs", :line 1708, :column 11, :end-line 1708, :end-column 16, :arglists (quote ([fmt & xs])), :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(fmt xs)], :arglists ([fmt & xs]), :arglists-meta (nil)}}, :name taoensso.encore/infof, :variadic true, :file "resources/www/js/out/taoensso/encore.cljs", :end-column 16, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(fmt xs)], :arglists ([fmt & xs]), :arglists-meta (nil)}, :method-params [(fmt xs)], :protocol-impl nil, :arglists-meta (nil), :column 5, :line 1708, :end-line 1708, :max-fixed-arity 1, :fn-var true, :arglists ([fmt & xs])}, nneg-num? {:protocol-inline nil, :meta {:file "/Users/luposlip/enterlab/cordevicljs/resources/www/js/out/taoensso/encore.cljs", :line 246, :column 9, :end-line 246, :end-column 18, :arglists (quote ([x]))}, :name taoensso.encore/nneg-num?, :variadic false, :file "resources/www/js/out/taoensso/encore.cljs", :end-column 18, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 246, :end-line 246, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, zero-num? {:protocol-inline nil, :meta {:file "/Users/luposlip/enterlab/cordevicljs/resources/www/js/out/taoensso/encore.cljs", :line 248, :column 9, :end-line 248, :end-column 18, :arglists (quote ([x]))}, :name taoensso.encore/zero-num?, :variadic false, :file "resources/www/js/out/taoensso/encore.cljs", :end-column 18, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 248, :end-line 248, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, secs->ms {:protocol-inline nil, :meta {:file "/Users/luposlip/enterlab/cordevicljs/resources/www/js/out/taoensso/encore.cljs", :line 616, :column 7, :end-line 616, :end-column 15, :arglists (quote ([secs]))}, :name taoensso.encore/secs->ms, :variadic false, :file "resources/www/js/out/taoensso/encore.cljs", :end-column 15, :method-params ([secs]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 616, :end-line 616, :max-fixed-arity 1, :fn-var true, :arglists (quote ([secs]))}, str-starts-with? {:protocol-inline nil, :meta {:file "/Users/luposlip/enterlab/cordevicljs/resources/www/js/out/taoensso/encore.cljs", :line 1211, :column 7, :end-line 1211, :end-column 23, :arglists (quote ([s substr]))}, :name taoensso.encore/str-starts-with?, :variadic false, :file "resources/www/js/out/taoensso/encore.cljs", :end-column 23, :method-params ([s substr]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1211, :end-line 1211, :max-fixed-arity 2, :fn-var true, :arglists (quote ([s substr]))}, round {:protocol-inline nil, :meta {:file "/Users/luposlip/enterlab/cordevicljs/resources/www/js/out/taoensso/encore.cljs", :line 560, :column 7, :end-line 560, :end-column 12, :arglists (quote ([n & [type nplaces]])), :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(n [type nplaces])], :arglists ([n & [type nplaces]]), :arglists-meta (nil)}}, :name taoensso.encore/round, :variadic true, :file "resources/www/js/out/taoensso/encore.cljs", :end-column 12, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(n [type nplaces])], :arglists ([n & [type nplaces]]), :arglists-meta (nil)}, :method-params [(n [type nplaces])], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 560, :end-line 560, :max-fixed-arity 1, :fn-var true, :arglists ([n & [type nplaces]])}, ->Swapped {:protocol-inline nil, :meta {:file "/Users/luposlip/enterlab/cordevicljs/resources/www/js/out/taoensso/encore.cljs", :line 753, :column 12, :end-line 753, :end-column 19, :internal-ctor true, :factory :positional, :arglists (quote ([new-val return-val]))}, :name taoensso.encore/->Swapped, :variadic false, :file "resources/www/js/out/taoensso/encore.cljs", :end-column 19, :method-params ([new-val return-val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :positional, :line 753, :end-line 753, :max-fixed-arity 2, :fn-var true, :arglists (quote ([new-val return-val]))}, rate-limiter {:protocol-inline nil, :meta {:file "/Users/luposlip/enterlab/cordevicljs/resources/www/js/out/taoensso/encore.cljs", :line 1532, :column 7, :end-line 1532, :end-column 19, :arglists (quote ([ncalls-limit window-ms])), :doc "Returns a `(fn [& [id]])` that returns either `nil` (limit okay) or number of\n  msecs until next rate limit window (rate limited)."}, :name taoensso.encore/rate-limiter, :variadic false, :file "resources/www/js/out/taoensso/encore.cljs", :end-column 19, :method-params ([ncalls-limit window-ms]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1532, :end-line 1532, :max-fixed-arity 2, :fn-var true, :arglists (quote ([ncalls-limit window-ms])), :doc "Returns a `(fn [& [id]])` that returns either `nil` (limit okay) or number of\n  msecs until next rate limit window (rate limited)."}, sayf {:protocol-inline nil, :meta {:file "/Users/luposlip/enterlab/cordevicljs/resources/www/js/out/taoensso/encore.cljs", :line 1699, :column 9, :end-line 1699, :end-column 13, :arglists (quote ([fmt & xs])), :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(fmt xs)], :arglists ([fmt & xs]), :arglists-meta (nil)}}, :name taoensso.encore/sayf, :variadic true, :file "resources/www/js/out/taoensso/encore.cljs", :end-column 13, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(fmt xs)], :arglists ([fmt & xs]), :arglists-meta (nil)}, :method-params [(fmt xs)], :protocol-impl nil, :arglists-meta (nil), :column 3, :line 1699, :end-line 1699, :max-fixed-arity 1, :fn-var true, :arglists ([fmt & xs])}, least {:protocol-inline nil, :meta {:file "/Users/luposlip/enterlab/cordevicljs/resources/www/js/out/taoensso/encore.cljs", :line 1129, :column 7, :end-line 1129, :end-column 12, :arglists (quote ([coll & [?comparator]])), :doc "Returns the 'least' element in coll in O(n) time.", :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(coll [?comparator])], :arglists ([coll & [?comparator]]), :arglists-meta (nil)}}, :name taoensso.encore/least, :variadic true, :file "resources/www/js/out/taoensso/encore.cljs", :end-column 12, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(coll [?comparator])], :arglists ([coll & [?comparator]]), :arglists-meta (nil)}, :method-params [(coll [?comparator])], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 1129, :end-line 1129, :max-fixed-arity 1, :fn-var true, :arglists ([coll & [?comparator]]), :doc "Returns the 'least' element in coll in O(n) time."}, nblank-str? {:protocol-inline nil, :meta {:file "/Users/luposlip/enterlab/cordevicljs/resources/www/js/out/taoensso/encore.cljs", :line 245, :column 7, :end-line 245, :end-column 18, :arglists (quote ([x]))}, :name taoensso.encore/nblank-str?, :variadic false, :file "resources/www/js/out/taoensso/encore.cljs", :end-column 18, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 245, :end-line 245, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, uuid-str {:protocol-inline nil, :meta {:file "/Users/luposlip/enterlab/cordevicljs/resources/www/js/out/taoensso/encore.cljs", :line 1268, :column 7, :end-line 1268, :end-column 15, :arglists (quote ([] [max-length])), :doc "Returns a UUIDv4 string of form \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\",\n  Ref. http://www.ietf.org/rfc/rfc4122.txt,\n       https://gist.github.com/franks42/4159427", :top-fn {:variadic false, :max-fixed-arity 1, :method-params ([] [max-length]), :arglists ([] [max-length]), :arglists-meta (nil nil)}}, :name taoensso.encore/uuid-str, :variadic false, :file "resources/www/js/out/taoensso/encore.cljs", :end-column 15, :top-fn {:variadic false, :max-fixed-arity 1, :method-params ([] [max-length]), :arglists ([] [max-length]), :arglists-meta (nil nil)}, :method-params ([] [max-length]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1268, :end-line 1268, :max-fixed-arity 1, :fn-var true, :arglists ([] [max-length]), :doc "Returns a UUIDv4 string of form \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\",\n  Ref. http://www.ietf.org/rfc/rfc4122.txt,\n       https://gist.github.com/franks42/4159427"}, *log-fn* {:name taoensso.encore/*log-fn*, :file "resources/www/js/out/taoensso/encore.cljs", :line 1664, :column 3, :end-line 1664, :end-column 42, :dynamic true, :doc "Experimental. Logger (fn [{:keys [level ?fmt xs msg_]}])->nil with:\n      :level ; e/o #{:trace :debug :info :warn :error :fatal :report}\n      :?fmt  ; Pattern for message formatting (when formatting)\n      :xs    ; Raw logging call arguments (excl. pattern for message formatting)\n      :msg_  ; Delay-wrapped formatted message string\n    Change val with `set!`/`binding`.", :meta {:file "/Users/luposlip/enterlab/cordevicljs/resources/www/js/out/taoensso/encore.cljs", :line 1664, :column 34, :end-line 1664, :end-column 42, :dynamic true, :doc "Experimental. Logger (fn [{:keys [level ?fmt xs msg_]}])->nil with:\n      :level ; e/o #{:trace :debug :info :warn :error :fatal :report}\n      :?fmt  ; Pattern for message formatting (when formatting)\n      :xs    ; Raw logging call arguments (excl. pattern for message formatting)\n      :msg_  ; Delay-wrapped formatted message string\n    Change val with `set!`/`binding`."}}, translate-signed-idx {:protocol-inline nil, :meta {:file "/Users/luposlip/enterlab/cordevicljs/resources/www/js/out/taoensso/encore.cljs", :line 691, :column 8, :end-line 691, :end-column 28, :private true, :arglists (quote ([signed-idx max-idx]))}, :private true, :name taoensso.encore/translate-signed-idx, :variadic false, :file "resources/www/js/out/taoensso/encore.cljs", :end-column 28, :method-params ([signed-idx max-idx]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 691, :end-line 691, :max-fixed-arity 2, :fn-var true, :arglists (quote ([signed-idx max-idx]))}, pos-int? {:protocol-inline nil, :meta {:file "/Users/luposlip/enterlab/cordevicljs/resources/www/js/out/taoensso/encore.cljs", :line 236, :column 8, :end-line 236, :end-column 16, :arglists (quote ([x]))}, :name taoensso.encore/pos-int?, :variadic false, :file "resources/www/js/out/taoensso/encore.cljs", :end-column 16, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 236, :end-line 236, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, nblank? {:protocol-inline nil, :meta {:file "/Users/luposlip/enterlab/cordevicljs/resources/www/js/out/taoensso/encore.cljs", :line 234, :column 9, :end-line 234, :end-column 16, :arglists (quote ([x]))}, :name taoensso.encore/nblank?, :variadic false, :file "resources/www/js/out/taoensso/encore.cljs", :end-column 16, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 234, :end-line 234, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, set-exp-backoff-timeout! {:protocol-inline nil, :meta {:file "/Users/luposlip/enterlab/cordevicljs/resources/www/js/out/taoensso/encore.cljs", :line 2002, :column 14, :end-line 2002, :end-column 38, :arglists (quote ([nullary-f & [nattempt]])), :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(nullary-f [nattempt])], :arglists ([nullary-f & [nattempt]]), :arglists-meta (nil)}}, :name taoensso.encore/set-exp-backoff-timeout!, :variadic true, :file "resources/www/js/out/taoensso/encore.cljs", :end-column 38, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(nullary-f [nattempt])], :arglists ([nullary-f & [nattempt]]), :arglists-meta (nil)}, :method-params [(nullary-f [nattempt])], :protocol-impl nil, :arglists-meta (nil), :column 8, :line 2002, :end-line 2002, :max-fixed-arity 1, :fn-var true, :arglists ([nullary-f & [nattempt]])}, as-?bool {:protocol-inline nil, :meta {:file "/Users/luposlip/enterlab/cordevicljs/resources/www/js/out/taoensso/encore.cljs", :line 253, :column 7, :end-line 253, :end-column 15, :arglists (quote ([x]))}, :name taoensso.encore/as-?bool, :variadic false, :file "resources/www/js/out/taoensso/encore.cljs", :end-column 15, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 253, :end-line 253, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, seq-kvs {:name taoensso.encore/seq-kvs, :file "resources/www/js/out/taoensso/encore.cljs", :line 929, :column 1, :end-line 929, :end-column 13, :meta {:file "/Users/luposlip/enterlab/cordevicljs/resources/www/js/out/taoensso/encore.cljs", :line 929, :column 6, :end-line 929, :end-column 13}, :doc "(seq     {:a :A}) => ([:a :A])\n   (seq-kvs {:a :A}) => (:a :A)"}, hpred {:protocol-inline nil, :meta {:file "/Users/luposlip/enterlab/cordevicljs/resources/www/js/out/taoensso/encore.cljs", :line 331, :column 7, :end-line 331, :end-column 12, :arglists (quote ([pred-form])), :doc "Implementation detail."}, :name taoensso.encore/hpred, :variadic false, :file "resources/www/js/out/taoensso/encore.cljs", :end-column 12, :method-params ([pred-form]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 331, :end-line 331, :max-fixed-arity 1, :fn-var true, :arglists (quote ([pred-form])), :doc "Implementation detail."}, abs {:protocol-inline nil, :meta {:file "/Users/luposlip/enterlab/cordevicljs/resources/www/js/out/taoensso/encore.cljs", :line 558, :column 7, :end-line 558, :end-column 10, :arglists (quote ([n]))}, :name taoensso.encore/abs, :variadic false, :file "resources/www/js/out/taoensso/encore.cljs", :end-column 10, :method-params ([n]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 558, :end-line 558, :max-fixed-arity 1, :fn-var true, :arglists (quote ([n]))}, map-kvs {:protocol-inline nil, :meta {:file "/Users/luposlip/enterlab/cordevicljs/resources/www/js/out/taoensso/encore.cljs", :line 949, :column 7, :end-line 949, :end-column 14, :arglists (quote ([kf vf m]))}, :name taoensso.encore/map-kvs, :variadic false, :file "resources/www/js/out/taoensso/encore.cljs", :end-column 14, :method-params ([kf vf m]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 949, :end-line 949, :max-fixed-arity 3, :fn-var true, :arglists (quote ([kf vf m]))}, map-vals {:protocol-inline nil, :meta {:file "/Users/luposlip/enterlab/cordevicljs/resources/www/js/out/taoensso/encore.cljs", :line 958, :column 7, :end-line 958, :end-column 15, :arglists (quote ([f m]))}, :name taoensso.encore/map-vals, :variadic false, :file "resources/www/js/out/taoensso/encore.cljs", :end-column 15, :method-params ([f m]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 958, :end-line 958, :max-fixed-arity 2, :fn-var true, :arglists (quote ([f m]))}, spaced-str-with-nils {:protocol-inline nil, :meta {:file "/Users/luposlip/enterlab/cordevicljs/resources/www/js/out/taoensso/encore.cljs", :line 1177, :column 7, :end-line 1177, :end-column 27, :arglists (quote ([xs]))}, :name taoensso.encore/spaced-str-with-nils, :variadic false, :file "resources/www/js/out/taoensso/encore.cljs", :end-column 27, :method-params ([xs]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1177, :end-line 1177, :max-fixed-arity 1, :fn-var true, :arglists (quote ([xs]))}, qb-min-times {:protocol-inline nil, :meta {:file "/Users/luposlip/enterlab/cordevicljs/resources/www/js/out/taoensso/encore.cljs", :line 1603, :column 7, :end-line 1603, :end-column 19, :arglists (quote ([times]))}, :name taoensso.encore/qb-min-times, :variadic false, :file "resources/www/js/out/taoensso/encore.cljs", :end-column 19, :method-params ([times]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1603, :end-line 1603, :max-fixed-arity 1, :fn-var true, :arglists (quote ([times]))}, nested-merge-with {:protocol-inline nil, :meta {:file "/Users/luposlip/enterlab/cordevicljs/resources/www/js/out/taoensso/encore.cljs", :line 1093, :column 7, :end-line 1093, :end-column 24, :arglists (quote ([f & maps])), :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(f maps)], :arglists ([f & maps]), :arglists-meta (nil)}}, :name taoensso.encore/nested-merge-with, :variadic true, :file "resources/www/js/out/taoensso/encore.cljs", :end-column 24, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(f maps)], :arglists ([f & maps]), :arglists-meta (nil)}, :method-params [(f maps)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 1093, :end-line 1093, :max-fixed-arity 1, :fn-var true, :arglists ([f & maps])}, as-?float {:protocol-inline nil, :meta {:file "/Users/luposlip/enterlab/cordevicljs/resources/www/js/out/taoensso/encore.cljs", :line 268, :column 7, :end-line 268, :end-column 16, :arglists (quote ([x]))}, :name taoensso.encore/as-?float, :variadic false, :file "resources/www/js/out/taoensso/encore.cljs", :end-column 16, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 268, :end-line 268, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, explode-keyword {:protocol-inline nil, :meta {:file "/Users/luposlip/enterlab/cordevicljs/resources/www/js/out/taoensso/encore.cljs", :line 500, :column 7, :end-line 500, :end-column 22, :arglists (quote ([k]))}, :name taoensso.encore/explode-keyword, :variadic false, :file "resources/www/js/out/taoensso/encore.cljs", :end-column 22, :method-params ([k]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 500, :end-line 500, :max-fixed-arity 1, :fn-var true, :arglists (quote ([k]))}, as-?nblank {:protocol-inline nil, :meta {:file "/Users/luposlip/enterlab/cordevicljs/resources/www/js/out/taoensso/encore.cljs", :line 250, :column 7, :end-line 250, :end-column 17, :arglists (quote ([x]))}, :name taoensso.encore/as-?nblank, :variadic false, :file "resources/www/js/out/taoensso/encore.cljs", :end-column 17, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 250, :end-line 250, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, assoc-some {:protocol-inline nil, :meta {:file "/Users/luposlip/enterlab/cordevicljs/resources/www/js/out/taoensso/encore.cljs", :line 908, :column 7, :end-line 908, :end-column 17, :arglists (quote ([m & kvs])), :doc "Assocs each kv iff its value is not nil.", :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(m kvs)], :arglists ([m & kvs]), :arglists-meta (nil)}}, :name taoensso.encore/assoc-some, :variadic true, :file "resources/www/js/out/taoensso/encore.cljs", :end-column 17, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(m kvs)], :arglists ([m & kvs]), :arglists-meta (nil)}, :method-params [(m kvs)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 908, :end-line 908, :max-fixed-arity 1, :fn-var true, :arglists ([m & kvs]), :doc "Assocs each kv iff its value is not nil."}, keys=nnil? {:protocol-inline nil, :meta {:file "/Users/luposlip/enterlab/cordevicljs/resources/www/js/out/taoensso/encore.cljs", :line 2009, :column 7, :end-line 2009, :end-column 17, :arglists (quote ([m ks]))}, :name taoensso.encore/keys=nnil?, :variadic false, :file "resources/www/js/out/taoensso/encore.cljs", :end-column 17, :method-params ([m ks]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 2009, :end-line 2009, :max-fixed-arity 2, :fn-var true, :arglists (quote ([m ks]))}, as-bool {:protocol-inline nil, :meta {:file "/Users/luposlip/enterlab/cordevicljs/resources/www/js/out/taoensso/encore.cljs", :line 2015, :column 7, :end-line 2015, :end-column 14, :arglists (quote ([x]))}, :name taoensso.encore/as-bool, :variadic false, :file "resources/www/js/out/taoensso/encore.cljs", :end-column 14, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 2015, :end-line 2015, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, errorf {:protocol-inline nil, :meta {:file "/Users/luposlip/enterlab/cordevicljs/resources/www/js/out/taoensso/encore.cljs", :line 1710, :column 11, :end-line 1710, :end-column 17, :arglists (quote ([fmt & xs])), :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(fmt xs)], :arglists ([fmt & xs]), :arglists-meta (nil)}}, :name taoensso.encore/errorf, :variadic true, :file "resources/www/js/out/taoensso/encore.cljs", :end-column 17, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(fmt xs)], :arglists ([fmt & xs]), :arglists-meta (nil)}, :method-params [(fmt xs)], :protocol-impl nil, :arglists-meta (nil), :column 5, :line 1710, :end-line 1710, :max-fixed-arity 1, :fn-var true, :arglists ([fmt & xs])}, clj1098 {:protocol-inline nil, :meta {:file "/Users/luposlip/enterlab/cordevicljs/resources/www/js/out/taoensso/encore.cljs", :line 944, :column 8, :end-line 944, :end-column 15, :private true, :arglists (quote ([x])), :doc "Workaround for Clojure versions [1.4, 1.5) that blow up on `reduce-kv`s\n  against a nil coll, Ref. http://dev.clojure.org/jira/browse/CLJ-1098."}, :private true, :name taoensso.encore/clj1098, :variadic false, :file "resources/www/js/out/taoensso/encore.cljs", :end-column 15, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 944, :end-line 944, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x])), :doc "Workaround for Clojure versions [1.4, 1.5) that blow up on `reduce-kv`s\n  against a nil coll, Ref. http://dev.clojure.org/jira/browse/CLJ-1098."}, parse-bool {:name taoensso.encore/parse-bool, :file "resources/www/js/out/taoensso/encore.cljs", :line 2012, :column 1, :end-line 2012, :end-column 16, :meta {:file "/Users/luposlip/enterlab/cordevicljs/resources/www/js/out/taoensso/encore.cljs", :line 2012, :column 6, :end-line 2012, :end-column 16}}, keys<= {:protocol-inline nil, :meta {:file "/Users/luposlip/enterlab/cordevicljs/resources/www/js/out/taoensso/encore.cljs", :line 2007, :column 7, :end-line 2007, :end-column 13, :arglists (quote ([m ks]))}, :name taoensso.encore/keys<=, :variadic false, :file "resources/www/js/out/taoensso/encore.cljs", :end-column 13, :method-params ([m ks]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 2007, :end-line 2007, :max-fixed-arity 2, :fn-var true, :arglists (quote ([m ks]))}, parse-int {:name taoensso.encore/parse-int, :file "resources/www/js/out/taoensso/encore.cljs", :line 2013, :column 1, :end-line 2013, :end-column 15, :meta {:file "/Users/luposlip/enterlab/cordevicljs/resources/www/js/out/taoensso/encore.cljs", :line 2013, :column 6, :end-line 2013, :end-column 15}}, round1 {:protocol-inline nil, :meta {:file "/Users/luposlip/enterlab/cordevicljs/resources/www/js/out/taoensso/encore.cljs", :line 579, :column 7, :end-line 579, :end-column 13, :arglists (quote ([n])), :doc "Optimized common case."}, :name taoensso.encore/round1, :variadic false, :file "resources/www/js/out/taoensso/encore.cljs", :end-column 13, :method-params ([n]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 579, :end-line 579, :max-fixed-arity 1, :fn-var true, :arglists (quote ([n])), :doc "Optimized common case."}, merge-deep-with {:name taoensso.encore/merge-deep-with, :file "resources/www/js/out/taoensso/encore.cljs", :line 2019, :column 1, :end-line 2019, :end-column 21, :meta {:file "/Users/luposlip/enterlab/cordevicljs/resources/www/js/out/taoensso/encore.cljs", :line 2019, :column 6, :end-line 2019, :end-column 21}}, replace-in* {:protocol-inline nil, :meta {:file "/Users/luposlip/enterlab/cordevicljs/resources/www/js/out/taoensso/encore.cljs", :line 780, :column 8, :end-line 780, :end-column 19, :private true, :arglists (quote ([?vf-type m ops])), :doc "Reduces input with\n  [<type> <ks> <reset-val-or-swap-fn>] or\n         [<ks> <reset-val-or-swap-fn>] ops."}, :private true, :name taoensso.encore/replace-in*, :variadic false, :file "resources/www/js/out/taoensso/encore.cljs", :end-column 19, :method-params ([?vf-type m ops]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 780, :end-line 780, :max-fixed-arity 3, :fn-var true, :arglists (quote ([?vf-type m ops])), :doc "Reduces input with\n  [<type> <ks> <reset-val-or-swap-fn>] or\n         [<ks> <reset-val-or-swap-fn>] ops."}, vec3? {:protocol-inline nil, :meta {:file "/Users/luposlip/enterlab/cordevicljs/resources/www/js/out/taoensso/encore.cljs", :line 242, :column 7, :end-line 242, :end-column 12, :arglists (quote ([x]))}, :name taoensso.encore/vec3?, :variadic false, :file "resources/www/js/out/taoensso/encore.cljs", :end-column 12, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 242, :end-line 242, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, assert-min-encore-version {:protocol-inline nil, :meta {:file "/Users/luposlip/enterlab/cordevicljs/resources/www/js/out/taoensso/encore.cljs", :line 40, :column 7, :end-line 40, :end-column 32, :arglists (quote ([min-version]))}, :name taoensso.encore/assert-min-encore-version, :variadic false, :file "resources/www/js/out/taoensso/encore.cljs", :end-column 32, :method-params ([min-version]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 40, :end-line 40, :max-fixed-arity 1, :fn-var true, :arglists (quote ([min-version]))}, non-throwing {:protocol-inline nil, :meta {:file "/Users/luposlip/enterlab/cordevicljs/resources/www/js/out/taoensso/encore.cljs", :line 330, :column 8, :end-line 330, :end-column 20, :private true, :arglists (quote ([pred]))}, :private true, :name taoensso.encore/non-throwing, :variadic false, :file "resources/www/js/out/taoensso/encore.cljs", :end-column 20, :method-params ([pred]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 330, :end-line 330, :max-fixed-arity 1, :fn-var true, :arglists (quote ([pred]))}, replace-in {:protocol-inline nil, :meta {:file "/Users/luposlip/enterlab/cordevicljs/resources/www/js/out/taoensso/encore.cljs", :line 798, :column 7, :end-line 798, :end-column 17, :arglists (quote ([m & ops])), :doc "Experimental. For use with `swap!`, etc.", :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(m ops)], :arglists ([m & ops]), :arglists-meta (nil)}}, :name taoensso.encore/replace-in, :variadic true, :file "resources/www/js/out/taoensso/encore.cljs", :end-column 17, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(m ops)], :arglists ([m & ops]), :arglists-meta (nil)}, :method-params [(m ops)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 798, :end-line 798, :max-fixed-arity 1, :fn-var true, :arglists ([m & ops]), :doc "Experimental. For use with `swap!`, etc."}, assoc-when {:protocol-inline nil, :meta {:file "/Users/luposlip/enterlab/cordevicljs/resources/www/js/out/taoensso/encore.cljs", :line 912, :column 7, :end-line 912, :end-column 17, :arglists (quote ([m & kvs])), :doc "Assocs each kv iff its val is truthy.", :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(m kvs)], :arglists ([m & kvs]), :arglists-meta (nil)}}, :name taoensso.encore/assoc-when, :variadic true, :file "resources/www/js/out/taoensso/encore.cljs", :end-column 17, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(m kvs)], :arglists ([m & kvs]), :arglists-meta (nil)}, :method-params [(m kvs)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 912, :end-line 912, :max-fixed-arity 1, :fn-var true, :arglists ([m & kvs]), :doc "Assocs each kv iff its val is truthy."}, logp {:protocol-inline nil, :meta {:file "/Users/luposlip/enterlab/cordevicljs/resources/www/js/out/taoensso/encore.cljs", :line 1696, :column 9, :end-line 1696, :end-column 13, :arglists (quote ([& xs])), :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(xs)], :arglists ([& xs]), :arglists-meta (nil)}}, :name taoensso.encore/logp, :variadic true, :file "resources/www/js/out/taoensso/encore.cljs", :end-column 13, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(xs)], :arglists ([& xs]), :arglists-meta (nil)}, :method-params [(xs)], :protocol-impl nil, :arglists-meta (nil), :column 3, :line 1696, :end-line 1696, :max-fixed-arity 0, :fn-var true, :arglists ([& xs])}, as-map {:protocol-inline nil, :meta {:file "/Users/luposlip/enterlab/cordevicljs/resources/www/js/out/taoensso/encore.cljs", :line 987, :column 7, :end-line 987, :end-column 13, :arglists (quote ([kvs & [kf vf]])), :doc "Cross between `hash-map` & `map-kvs`.", :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(kvs [kf vf])], :arglists ([kvs & [kf vf]]), :arglists-meta (nil)}}, :name taoensso.encore/as-map, :variadic true, :file "resources/www/js/out/taoensso/encore.cljs", :end-column 13, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(kvs [kf vf])], :arglists ([kvs & [kf vf]]), :arglists-meta (nil)}, :method-params [(kvs [kf vf])], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 987, :end-line 987, :max-fixed-arity 1, :fn-var true, :arglists ([kvs & [kf vf]]), :doc "Cross between `hash-map` & `map-kvs`."}, vec* {:protocol-inline nil, :meta {:file "/Users/luposlip/enterlab/cordevicljs/resources/www/js/out/taoensso/encore.cljs", :line 286, :column 7, :end-line 286, :end-column 11, :arglists (quote ([x]))}, :name taoensso.encore/vec*, :variadic false, :file "resources/www/js/out/taoensso/encore.cljs", :end-column 11, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 286, :end-line 286, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, gc-rate {:name taoensso.encore/gc-rate, :file "resources/www/js/out/taoensso/encore.cljs", :line 1331, :column 1, :end-line 1331, :end-column 31, :const true, :private true, :meta {:file "/Users/luposlip/enterlab/cordevicljs/resources/www/js/out/taoensso/encore.cljs", :line 1331, :column 24, :end-line 1331, :end-column 31, :const true, :private true}}, keys= {:protocol-inline nil, :meta {:file "/Users/luposlip/enterlab/cordevicljs/resources/www/js/out/taoensso/encore.cljs", :line 2006, :column 7, :end-line 2006, :end-column 12, :arglists (quote ([m ks]))}, :name taoensso.encore/keys=, :variadic false, :file "resources/www/js/out/taoensso/encore.cljs", :end-column 12, :method-params ([m ks]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 2006, :end-line 2006, :max-fixed-arity 2, :fn-var true, :arglists (quote ([m ks]))}, ks>= {:protocol-inline nil, :meta {:file "/Users/luposlip/enterlab/cordevicljs/resources/www/js/out/taoensso/encore.cljs", :line 297, :column 7, :end-line 297, :end-column 11, :arglists (quote ([ks m]))}, :name taoensso.encore/ks>=, :variadic false, :file "resources/www/js/out/taoensso/encore.cljs", :end-column 11, :method-params ([ks m]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 297, :end-line 297, :max-fixed-arity 2, :fn-var true, :arglists (quote ([ks m]))}, round2 {:protocol-inline nil, :meta {:file "/Users/luposlip/enterlab/cordevicljs/resources/www/js/out/taoensso/encore.cljs", :line 583, :column 7, :end-line 583, :end-column 13, :arglists (quote ([n])), :doc "Optimized common case."}, :name taoensso.encore/round2, :variadic false, :file "resources/www/js/out/taoensso/encore.cljs", :end-column 13, :method-params ([n]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 583, :end-line 583, :max-fixed-arity 1, :fn-var true, :arglists (quote ([n])), :doc "Optimized common case."}, assertion-error {:protocol-inline nil, :meta {:file "/Users/luposlip/enterlab/cordevicljs/resources/www/js/out/taoensso/encore.cljs", :line 310, :column 7, :end-line 310, :end-column 22, :arglists (quote ([msg]))}, :name taoensso.encore/assertion-error, :variadic false, :file "resources/www/js/out/taoensso/encore.cljs", :end-column 22, :method-params ([msg]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 310, :end-line 310, :max-fixed-arity 1, :fn-var true, :arglists (quote ([msg]))}, console-warn {:name taoensso.encore/console-warn, :file "resources/www/js/out/taoensso/encore.cljs", :line 1649, :column 3, :end-line 1649, :end-column 20, :meta {:file "/Users/luposlip/enterlab/cordevicljs/resources/www/js/out/taoensso/encore.cljs", :line 1649, :column 8, :end-line 1649, :end-column 20}}, have-console? {:name taoensso.encore/have-console?, :file "resources/www/js/out/taoensso/encore.cljs", :line 1643, :column 3, :end-line 1643, :end-column 31, :private true, :meta {:file "/Users/luposlip/enterlab/cordevicljs/resources/www/js/out/taoensso/encore.cljs", :line 1643, :column 18, :end-line 1643, :end-column 31, :private true}}}, :require-macros {enc-macros taoensso.encore, taoensso.encore taoensso.encore}, :cljs.analyzer/constants {:seen #{:tick :max-len :min :report :mem/all :get :backoff-ms :hash :?fmt :this-version :?content :else :keywordize :err-type :reset :protocol :unknown :method :default :pathname :xhr-pool-depleted :new :msg_ :ns :warn :msecs :trace :or :swap/dissoc :secs :mem/del :months :params :days :val :type :mins :debug :xs :err-cause :hostname :search :abort :http-error :headers :fatal :round :level :host :ajax/resp-as-text :?err :mem/fresh :result :max :factor :err-msg :swap :edn :raw-resp :info :?content-type :ajax/bad-response-type :hours :return-val :?line :years :error :?status :exception :form :new-val :json :timeout :resp-type :min-version :ms :doc :xml :auto :end-idx :xhr :weeks :href :timeout-ms :?error :no-content :old :in :text}, :order [:min-version :this-version :doc :err-type :err-msg :err-cause :ns :?line :form :val :?err :else :round :type :min :max :factor :years :months :weeks :days :hours :mins :secs :msecs :ms :in :max-len :end-idx :or :new-val :return-val :swap/dissoc :swap :old :new :reset :keywordize :mem/del :mem/all :mem/fresh :tick :backoff-ms :result :debug :level :?fmt :xs :msg_ :default :trace :info :warn :error :fatal :report :href :protocol :hostname :host :pathname :search :hash :method :get :params :headers :timeout-ms :resp-type :auto :timeout :edn :json :xml :text :ajax/bad-response-type :ajax/resp-as-text :raw-resp :xhr :?content-type :?content :?status :?error :exception :http-error :abort :unknown :no-content :xhr-pool-depleted]}, :doc "Some tools I use often, w/o any external deps."}